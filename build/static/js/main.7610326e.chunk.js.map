{"version":3,"sources":["Alert/Alert.js","pages/RegisterPage/RegisterPage.js","images/DURE.png","Redux/userSlice.js","settings/url.js","settings/api.js","pages/LoginPage/LoginModal.js","components/Navbar/NavBar.js","images/brown_trash.jpg","images/tissue_trash.png","pages/MainPage/Banner/Banner.js","pages/MainPage/CharacterPage/Character.js","pages/MainPage/Worldview/Worldview.js","pages/MainPage/Medias/Medias.js","constants/URL.js","pages/MainPage/Menubar/Menubar.js","pages/MainPage/home.js","pages/LoginPage/LoginPage.js","pages/Help/Help.js","pages/UploadPage/UploadPage.js","components/Pagination/PaginationComponent.js","pages/NoticePage/NoticePage.js","pages/RakingPage/RakingPage.js","Util/Util.js","pages/CommunityPage/CommunityTable.js","pages/CommunityPage/CommunityBig.js","pages/CommunityPage/CommunityPage.js","pages/DetailPage/DetailPage.js","pages/Mypage/Mypage.js","pages/RecyclingPage/RecycleBox/postBox.js","pages/RecyclingPage/RecycleBox/RecycleBox.js","pages/RecyclingPage/Quiz/AccordionContainer.js","pages/RecyclingPage/Quiz/Quiz.js","pages/RecyclingPage/RecyclingPage.js","App.js","Redux/store.js","index.js"],"names":["SuccessAlert","title","Swal","fire","icon","showConfirmButton","showCloseButton","timer","showClass","popup","hideClass","FailLoginAlert","footer","FailAlert","RegisterPage","props","formik","useFormik","enableReinitialize","initialValues","login_id","password","checkPassword","nickname","validationSchema","yup","shape","email","required","min","oneOf","max","onSubmit","values","setSubmitting","setErrors","axios","post","then","res","data","code","history","replace","msg","catch","err","response","console","log","handleChange","errors","handleSubmit","resetForm","useState","passwordHide","setPasswordHide","checkPasswordHide","setCheckPasswordHide","onClickChange","e","id","Container","LoginContainer","JoinFont","FormContainer","TextContainer","ShowBox","TextLabel","Textbox","Input","placeholder","type","value","onChange","style","border","length","SuccessIcons","className","FailIcons","ErrorFont","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","color","LockIcons","onClick","padding","ButtonContainer","styled","div","p","form","input","i","userSlice","createSlice","name","initialState","user","reducers","LOGIN","state","action","payload","LOGOUT","actions","BASE_URL","create","baseURL","withCredentials","LoginModal","useHistory","useSelector","auth","dispatch","useDispatch","setShow","handleClose","a","isSubmitting","dirty","Modal","onHide","centered","Header","closeButton","Body","LoginLabel","Form","method","disabled","TextBox","Label","ForgetContainer","SubmitBtn","SignContainer","SignFont","push","h1","label","span","NavLinkq","LinkS","NavBar","onChannelChange","channel","preventDefault","Navbar","collapseOnSelect","expand","bg","variant","Brand","Logo","src","DURE","alt","Toggle","aria-controls","Collapse","Nav","NavDropdown","to","smooth","duration","spy","exact","offset","Item","Link","href","img","CarouselBox","Carousel","IMG","Banner","backImage","trush1","sub","image","trush2","main","fade","map","array","index","Caption","width","height","Character","Worldview","Medias","SocialContainer","SocialBox","target","rel","background","Social","Menubar","NavLinks","Home","setHide","pageY","setPageY","documentRef","useRef","document","handleScroll","pageYOffset","window","useEffect","current","addEventListener","removeEventListener","HeaderWrap","LoginPage","Content","Span","HelpBox","HelpContainer","Help","isHelp","setIsHelp","button","Title","UploadPage","EditorState","createEmpty","editor","setEditor","editorStyle","minHeight","borderWidth","borderStyle","borderColor","editorState","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","toolbar","inline","inDropdown","list","textAlign","link","uploadCallback","file","URL","createObjectURL","Promise","resolve","reject","draftToHtml","convertToRaw","getCurrentContent","PaginationComponent","totalPage","page","Pagination","count","display","justifyContent","HeadTitle","HeadDate","TitleRow","CreatedRow","CreatedRow1","TableRowContainer","TableContainer","TH","tr","th","TD","td","h3","NoticePage","noticePost","setNoticepost","setPage","setTotalPage","fetchNotice","get","statusText","results","parseInt","created_at","substr","backgroundColor","margin","RakingPage","calculateChatDate","d","today","Date","diffM","Math","floor","getTime","diffH","diffD","TR","ImageIcon","HeadTitleTH","HeadUserTH","HeadSmallTH","Headtr","ContentTitle","ContentUser","ContentSmall","CommunityTable","posts","Table","hover","size","postId","review_count","hit_count","Post","PostImg","PostTitle","PostContent","PostInforBox","CommunityBig","InputGroup","Button","FormControl","content","Breadcrumb","active","SpinnerContainer","IconBox","Icons","Subtitle","InputGroups","SearchBtn","InputForm","CommunityPage","setPosts","isDisplay","setIsDisplay","search","setSearch","isLoading","setIsLoading","onChangeDisplay","Display","fetchPost","keyword","params","alert","Spinner","animation","Append","BottomContainer","CountReviewText","SubmitButton","ReviewSubmitBox","TextArea","textarea","AvartarContainer","ReviewContent","ReviewDate","ReviewUser","ReviewBox","ReviewinfoBox","ReviewContainer","TitleContainer","TotalReview","TotalReviewCount","DetailPage","reviewText","setReviewText","setPost","reviews","setReviews","match","totalReview","setTotalReview","fetchReview","review","backgroundImage","moment","subtract","calendar","format","rows","maxLength","currentTarget","Mypage","RightContainer","TYpography","Typography","ICON","Box","Image","PostBox","React","expanded","setExpanded","in","timeout","unmountOnExit","paragraph","TitleBox","BoxContainer","RecycleBox","fetchQuiz","recycles","setRecycles","newRecycleInfos","Object","assign","forEach","recycleInfo","category","hasOwnProperty","SolutionBox","RealityFont","SolutionFont","AccordionContainer","quiz","Accordion","borderBottom","AccordionSummary","expandIcon","question","answer","Quiz","quizs","setQuizs","FetchQuiz","RecyclingPage","GlobalStyle","createGlobalStyle","App","path","component","render","persistConfig","key","storage","whitelist","rootReducer","combineReducers","userReducer","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","defaults","headers","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7610326e.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\nexport const SuccessAlert = (title) => {\n    Swal.fire({\n        // position: 'top-end',\n        icon: 'success',\n        title: title,\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 2500,\n        showClass: {\n            popup: 'animate__animated animate__fadeInDown',\n        },\n        hideClass: {\n            popup: 'animate__animated animate__fadeOutUp',\n        },\n    });\n};\nexport const FailLoginAlert = (title) => {\n    Swal.fire({\n        icon: 'error',\n        title: title,\n        footer: '<a href=\"register\">회원가입 하러가기</a>',\n    });\n};\nexport const FailAlert = (title) => {\n    Swal.fire({\n        icon: 'error',\n        title: title,\n    });\n};\n","import React, { useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport styled from 'styled-components';\r\nimport './button.css';\r\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { FailAlert, FailLoginAlert, SuccessAlert } from '../../Alert/Alert';\r\nfunction RegisterPage(props) {\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            login_id: '',\r\n            password: '',\r\n            checkPassword: '',\r\n            nickname: '',\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            login_id: yup\r\n                .string()\r\n                .email('존재하지 않는 형식입니다.')\r\n                .required('필수 항목입니다.'),\r\n            password: yup\r\n                .string()\r\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\r\n                .required('필수 항목입니다.'),\r\n            // checkPassword: yup.string().required('필수 항목입니다.'),\r\n            checkPassword: yup\r\n                .string()\r\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\r\n                .oneOf([yup.ref('password'), null], '비밀번호와 같지않습니다.')\r\n                .required('필수 항목입니다.'),\r\n            // phoneNumber: yup\r\n            //     .string()\r\n            //     .max(11, '최대 11자리입니다 ')\r\n            //     .required('- 없이 숫자만 입력해주세요.'),\r\n            nickname: yup\r\n                .string()\r\n                .min(2, '최소 2자리 이상 입니다 ')\r\n                .max(6, '최대 6자리 이하 입니다')\r\n                .required('필수 항목입니다.'),\r\n        }),\r\n        onSubmit: (values, { setSubmitting, setErrors }) => {\r\n            // if (\r\n            //     values.password.length === 0 ||\r\n            //     values.password.length === 0 ||\r\n            //     values.checkPassword.length === 0 ||\r\n            //     values.nickname.length === 0\r\n            // ) {\r\n            //     FailAlert('모든항목 입력');\r\n            //     return;\r\n            // }\r\n            axios\r\n                .post('users/sign-up/', values)\r\n                .then((res) => {\r\n                    if (res.data.code !== 'OK') {\r\n                        FailAlert(res.data.msg);\r\n                        // alert(res.data.msg);\r\n                        return;\r\n                    }\r\n                    SuccessAlert('회원가입 되었습니다');\r\n                    // alert('회원가입 되었습니다.');\r\n                    props.history.replace('/');\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.data.msg) {\r\n                        FailAlert(err.response.data.msg);\r\n                        // alert(err.response.data.msg);\r\n                    } else {\r\n                        console.log(err);\r\n                    }\r\n                });\r\n        },\r\n    });\r\n\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        // setFieldTouched,\r\n        // touched,\r\n        // isValid,\r\n        // isSubmitting,\r\n        handleSubmit,\r\n        // setFieldValue,\r\n        resetForm,\r\n        // setErrors,\r\n    } = formik;\r\n    const [passwordHide, setPasswordHide] = useState(true);\r\n    const [checkPasswordHide, setCheckPasswordHide] = useState(true);\r\n    const onClickChange = (e, id) => {\r\n        // e.preventDefault();\r\n        if (id === 'password') {\r\n            setPasswordHide(!passwordHide);\r\n        } else if (id === 'checkPassword')\r\n            setCheckPasswordHide(!checkPasswordHide);\r\n    };\r\n    return (\r\n        <Container>\r\n            <LoginContainer>\r\n                <JoinFont>회원가입</JoinFont>\r\n\r\n                <FormContainer onSubmit={handleSubmit}>\r\n                    {/*아이디*/}\r\n                    <TextContainer>\r\n                        <ShowBox>\r\n                            <TextLabel>아이디</TextLabel>\r\n                        </ShowBox>\r\n                        <Textbox>\r\n                            <Input\r\n                                placeholder=\"이메일\"\r\n                                type=\"email\"\r\n                                value={values.login_id}\r\n                                onChange={handleChange('login_id')}\r\n                                style={{\r\n                                    border:\r\n                                        values.login_id.length === 0\r\n                                            ? 'border: 1px solid #adaabf'\r\n                                            : !errors.login_id\r\n                                            ? '1px solid #00d8be'\r\n                                            : '1px solid #ff5631',\r\n                                }}\r\n                            />\r\n                            {values.login_id && !errors.login_id && (\r\n                                <SuccessIcons className=\"far fa-check-circle\" />\r\n                            )}\r\n                            {values.login_id && errors.login_id && (\r\n                                <FailIcons className=\"far fa-times-circle\" />\r\n                            )}\r\n                            {errors.login_id && (\r\n                                <ErrorFont>{errors.login_id}</ErrorFont>\r\n                            )}\r\n                        </Textbox>\r\n                    </TextContainer>\r\n                    {/*비밀번호*/}\r\n                    <TextContainer>\r\n                        <ShowBox>\r\n                            <TextLabel>비밀번호</TextLabel>\r\n                            {/*<HideLabel*/}\r\n                            {/*    onClick={(e) => {*/}\r\n                            {/*        onClickChange(e, 'password');*/}\r\n                            {/*    }}*/}\r\n                            {/*>*/}\r\n                            {/*    {passwordHide ? 'Hide' : 'Show'}*/}\r\n                            {/*</HideLabel>*/}\r\n                        </ShowBox>\r\n                        <Textbox>\r\n                            <OverlayTrigger\r\n                                placement=\"top\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={\r\n                                    <Tooltip style={{ color: 'red' }}>\r\n                                        {passwordHide\r\n                                            ? '비밀번호 보여주기'\r\n                                            : '비밀번호 숨기기'}\r\n                                    </Tooltip>\r\n                                }\r\n                            >\r\n                                <LockIcons\r\n                                    onClick={(e) => {\r\n                                        onClickChange(e, 'password');\r\n                                    }}\r\n                                    className={\r\n                                        passwordHide\r\n                                            ? 'fas fa-lock'\r\n                                            : 'fas fa-lock-open'\r\n                                    }\r\n                                />\r\n                            </OverlayTrigger>\r\n\r\n                            {/*<LockIcons className=\"fas fa-lock\" />*/}\r\n                            <Input\r\n                                placeholder=\"비밀번호\"\r\n                                type={passwordHide ? 'password' : 'text'}\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                style={{\r\n                                    padding: '12px 3rem',\r\n                                    border: !values.password\r\n                                        ? 'border: 1px solid #adaabf'\r\n                                        : !errors.password\r\n                                        ? '1px solid #00d8be'\r\n                                        : '1px solid #ff5631',\r\n                                }}\r\n                            />\r\n                            {values.password && !errors.password && (\r\n                                <SuccessIcons className=\"far fa-check-circle\" />\r\n                            )}\r\n                            {values.password && errors.password && (\r\n                                <FailIcons className=\"far fa-times-circle\" />\r\n                            )}\r\n                            {errors.password && (\r\n                                <ErrorFont>{errors.password}</ErrorFont>\r\n                            )}\r\n                        </Textbox>\r\n                    </TextContainer>\r\n                    {/*비밀번호 체크*/}\r\n\r\n                    <TextContainer>\r\n                        <ShowBox>\r\n                            <TextLabel>비밀번호 확인</TextLabel>\r\n                        </ShowBox>\r\n                        <Textbox>\r\n                            <OverlayTrigger\r\n                                placement=\"top\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={\r\n                                    <Tooltip style={{ color: 'red' }}>\r\n                                        {passwordHide\r\n                                            ? '비밀번호 확인 보여주기'\r\n                                            : '비밀번호 확인 숨기기'}\r\n                                    </Tooltip>\r\n                                }\r\n                            >\r\n                                <LockIcons\r\n                                    onClick={(e) => {\r\n                                        onClickChange(e, 'checkPassword');\r\n                                    }}\r\n                                    className={\r\n                                        checkPasswordHide\r\n                                            ? 'fas fa-lock'\r\n                                            : 'fas fa-lock-open'\r\n                                    }\r\n                                />\r\n                            </OverlayTrigger>\r\n\r\n                            <Input\r\n                                placeholder=\"비밀번호 확인\"\r\n                                type={checkPasswordHide ? 'password' : 'text'}\r\n                                value={values.checkPassword}\r\n                                onChange={handleChange('checkPassword')}\r\n                                style={{\r\n                                    padding: '12px 3rem',\r\n                                    border: !values.checkPassword\r\n                                        ? 'border: 1px solid #adaabf'\r\n                                        : !errors.checkPassword\r\n                                        ? '1px solid #00d8be'\r\n                                        : '1px solid #ff5631',\r\n                                }}\r\n                            />\r\n                            {values.checkPassword && !errors.checkPassword && (\r\n                                <SuccessIcons className=\"far fa-check-circle\" />\r\n                            )}\r\n                            {values.checkPassword && errors.checkPassword && (\r\n                                <FailIcons className=\"far fa-times-circle\" />\r\n                            )}\r\n                            {errors.checkPassword && (\r\n                                <ErrorFont>{errors.checkPassword}</ErrorFont>\r\n                            )}\r\n                        </Textbox>\r\n                        {/*{errors.checkPassword && (*/}\r\n                        {/*    <ErrorFont>{errors.checkPassword}</ErrorFont>*/}\r\n                        {/*)}*/}\r\n                    </TextContainer>\r\n                    {/*닉네임*/}\r\n                    <TextContainer>\r\n                        <ShowBox>\r\n                            <TextLabel>닉네임</TextLabel>\r\n                        </ShowBox>\r\n                        <Textbox>\r\n                            <Input\r\n                                placeholder=\"닉네임\"\r\n                                type=\"text \"\r\n                                value={values.nickname}\r\n                                onChange={handleChange('nickname')}\r\n                                style={{\r\n                                    border: !values.nickname\r\n                                        ? 'border: 1px solid #adaabf'\r\n                                        : !errors.nickname\r\n                                        ? '1px solid #00d8be'\r\n                                        : '1px solid #ff5631',\r\n                                }}\r\n                            />\r\n                            {values.nickname && !errors.nickname && (\r\n                                <SuccessIcons className=\"far fa-check-circle\" />\r\n                            )}\r\n                            {values.nickname && errors.nickname && (\r\n                                <FailIcons className=\"far fa-times-circle\" />\r\n                            )}\r\n                            {errors.nickname && (\r\n                                <ErrorFont>{errors.nickname}</ErrorFont>\r\n                            )}\r\n                        </Textbox>\r\n                    </TextContainer>\r\n\r\n                    {/*버튼*/}\r\n\r\n                    {/*<button type=\"submit\" onClick={handleSubmit}>*/}\r\n                    {/*    Login now*/}\r\n                    {/*</button>*/}\r\n                    <ButtonContainer>\r\n                        <div className=\"wrap\">\r\n                            <button\r\n                                className=\"button\"\r\n                                type=\"submit\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                회원가입 하귀\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"wrap\">\r\n                            <button\r\n                                className=\"button\"\r\n                                type=\"reset\"\r\n                                onClick={resetForm}\r\n                            >\r\n                                다시입력\r\n                            </button>\r\n                        </div>\r\n                    </ButtonContainer>\r\n                    {/*{errors.password && (*/}\r\n                    {/*    <ErrorFont>{errors.password}</ErrorFont>*/}\r\n                    {/*)}*/}\r\n                    {/*{errors.email && <ErrorFont>{errors.email}</ErrorFont>}*/}\r\n                    {/*{errors.checkPassword && (*/}\r\n                    {/*    <ErrorFont>{errors.checkPassword}</ErrorFont>*/}\r\n                    {/*)}*/}\r\n                    {/*{errors.nickname && (*/}\r\n                    {/*    <ErrorFont>{errors.nickname}</ErrorFont>*/}\r\n                    {/*)}*/}\r\n                </FormContainer>\r\n            </LoginContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst JoinFont = styled.p`\r\n    font-size: 40px;\r\n    padding-top: 60px;\r\n    border-bottom: 1px solid #cccccc;\r\n    text-align: center;\r\n    margin-bottom: 4rem;\r\n    line-height: 5rem;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nconst ErrorFont = styled.p`\r\n    color: #f2685b;\r\n`;\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n`;\r\nconst TextContainer = styled.div`\r\n    width: 530px;\r\n    text-align: left;\r\n    margin: 1rem auto auto;\r\n    height: 5.4rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nconst Textbox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    //align-items: center;\r\n    position: relative;\r\n    width: 400px;\r\n`;\r\nconst Input = styled.input`\r\n    background-color: #eaf0fe;\r\n    width: 100%;\r\n    height: 52px;\r\n    border: 1px solid #adaabf;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 1px 2px rgba(50, 43, 95, 0.08);\r\n    border-radius: 4px;\r\n    padding: 12px 1.5rem;\r\n    &:focus {\r\n        outline: none;\r\n        border: 1px solid blue;\r\n        //border: 1px solid #00d8be;\r\n    }\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    margin: auto;\r\n    max-width: 1250px;\r\n    text-align: center;\r\n`;\r\nconst TextLabel = styled.p`\r\n    margin-bottom: 3px;\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n`;\r\nconst HideLabel = styled(TextLabel)`\r\n    cursor: pointer;\r\n`;\r\nconst ShowBox = styled.div`\r\n    display: flex;\r\n    margin-top: 1rem;\r\n    justify-content: space-between;\r\n`;\r\nconst SuccessIcons = styled.i`\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 16px;\r\n    color: #00d8be;\r\n`;\r\nconst FailIcons = styled.i`\r\n    position: absolute;\r\n    top: 16px;\r\n    right: 12px;\r\n    color: #ff5631;\r\n`;\r\nconst LockIcons = styled.i`\r\n    position: absolute;\r\n    top: 16px;\r\n    left: 16px;\r\n    color: #adaabf;\r\n    cursor: pointer;\r\n`;\r\n//<i class=\"fas fa-lock-open\"></i>\r\n","export default __webpack_public_path__ + \"static/media/DURE.ac8f9a32.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        user: {},\n    },\n    reducers: {\n        LOGIN: (state, action) => {\n            state.user = action.payload;\n        },\n        LOGOUT: (state) => {\n            state.user = null;\n        },\n    },\n});\n\nexport const selectUser = (state) => state.user;\n\nexport const { LOGIN, LOGOUT } = userSlice.actions;\nexport default userSlice.reducer;\n","// let url = 'http://localhost';\n// url = 'http://3.35.167.116';\n// url = 'http://www.dorestory.com';\n//\n// if (process.env.NODE_ENV === 'production') {\n//     url = 'http://www.dorestory.com:8000/v1/';\n// }\n//\n// export const BASE_URL = url + ':8000/v1/';\n// // http://3.35.167.116:8000/v1/users/sign-up/\n\nlet url = 'http://localhost';\nurl = 'http://3.35.167.116';\nurl = 'http://www.dorestory.com';\n\nif (process.env.NODE_ENV === 'production') {\n    url = 'http://www.dorestory.com';\n}\n\nexport const BASE_URL = url + ':8000/v1';\n","import axios from 'axios';\nimport { BASE_URL } from './url';\n\nconst api = axios.create({\n    baseURL: BASE_URL,\n    withCredentials: true,\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\n// import { selectUser } from '../../Redux/store';\r\nimport { LOGIN, LOGOUT, selectUser } from '../../Redux/userSlice';\r\n// import { LOGIN, LOGOUT, selectUser } from '../../Redux/store';\r\nimport { FailLoginAlert, SuccessAlert } from '../../Alert/Alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport api from '../../settings/api';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginModal(props) {\r\n    const history = useHistory();\r\n    const auth = useSelector((state) => state.auth);\r\n    const { user } = auth;\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n    const handleShow = () => {\r\n        resetForm();\r\n        setShow(true);\r\n    };\r\n    const onHandleError = () => {\r\n        if (values.password.length === 0 || values.login_id.length === 0) {\r\n        } else if (errors.login_id) {\r\n            FailLoginAlert(errors.login_id);\r\n        } else if (values.password.length < 8) {\r\n            FailLoginAlert(errors.password);\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            login_id: '',\r\n            password: '',\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            login_id: yup\r\n                .string()\r\n                .email('존재하지 않는 형식입니다.')\r\n                .required('필수 항목입니다.'),\r\n            password: yup\r\n                .string()\r\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\r\n                .required('필수 항목입니다.'),\r\n        }),\r\n        onSubmit: async (values, { setSubmitting, setErrors }) => {\r\n            // console.log('axios url', axios.defaults.baseURL);\r\n\r\n            axios\r\n                .post('/users/login/', values)\r\n                .then((res) => {\r\n                    handleClose();\r\n                    SuccessAlert('로그인 성공');\r\n                    // console.log('성공', res);\r\n                    // alert('로그인 성공');\r\n                    dispatch(LOGIN(res.data));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err, 'catch err');\r\n                    console.log(err.response, 'catch err');\r\n                    if (err.response?.data.msg) {\r\n                        FailLoginAlert(err.response.data.msg);\r\n                        // alert(err.response.data.msg);\r\n                    }\r\n                });\r\n        },\r\n    });\r\n    const handleLogout = (e) => {\r\n        dispatch(LOGOUT());\r\n    };\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        // setFieldTouched,\r\n        // touched,\r\n        // isValid,\r\n        // isSubmitting,\r\n        handleSubmit,\r\n        // setFieldValue,\r\n        resetForm,\r\n        // setErrors,\r\n        isSubmitting,\r\n        dirty,\r\n    } = formik;\r\n\r\n    return (\r\n        <>\r\n            {!user ? (\r\n                <button onClick={handleShow}>로그인</button>\r\n            ) : (\r\n                <button onClick={handleLogout}>로그아웃</button>\r\n            )}\r\n            <Modal\r\n                show={show}\r\n                onHide={() => {\r\n                    handleClose();\r\n                    resetForm();\r\n                }}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton />\r\n                <Modal.Body>\r\n                    <LoginLabel>로그인</LoginLabel>\r\n                    <Form\r\n                        method=\"post\"\r\n                        onSubmit={handleSubmit}\r\n                        disabled={!formik.dirty}\r\n                    >\r\n                        <TextBox>\r\n                            <Input\r\n                                type=\"text\"\r\n                                required\r\n                                value={values.login_id}\r\n                                onChange={handleChange('login_id')}\r\n                            />\r\n                            <Label>Username</Label>\r\n                        </TextBox>\r\n                        <TextBox>\r\n                            <Input\r\n                                type=\"password\"\r\n                                required\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                            />\r\n                            <Label>Password</Label>\r\n                        </TextBox>\r\n                        <ForgetContainer className=\"pass\">\r\n                            Forgot Password?\r\n                        </ForgetContainer>\r\n                        <SubmitBtn\r\n                            type=\"submit\"\r\n                            value=\"login\"\r\n                            onClick={(e) => {\r\n                                onHandleError();\r\n                            }}\r\n                        />\r\n                        <SignContainer>\r\n                            Not a member?\r\n                            <SignFont\r\n                                onClick={() => {\r\n                                    setShow(false);\r\n                                    history.push('/register');\r\n                                }}\r\n                            >\r\n                                Signup\r\n                            </SignFont>\r\n                        </SignContainer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\nconst LoginLabel = styled.h1`\r\n    text-align: center;\r\n    padding: 20px 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n`;\r\nconst Form = styled.form`\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n`;\r\nconst TextBox = styled.div`\r\n    position: relative;\r\n    border-bottom: 2px solid #adadad;\r\n    margin: 30px 0;\r\n`;\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    padding: 0 5px;\r\n    height: 40px;\r\n    font-size: 1rem;\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    &:focus ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:valid ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:focus ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n    &:valid ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5px;\r\n    color: #adadad;\r\n    transform: translateY(-50%);\r\n    font-size: 1rem;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n`;\r\nconst ForgetContainer = styled.div`\r\n    margin: -5px 0 20px 5px;\r\n    color: #a6a6a6;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\nconst SubmitBtn = styled.input`\r\n    width: 100%;\r\n    height: 50px;\r\n    border: 1px solid;\r\n    background: #2691d9;\r\n    border-radius: 25px;\r\n    font-size: 18px;\r\n    color: #e9f4fb;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        border-color: #2691d9;\r\n        transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst SignContainer = styled.div`\r\n    margin: 30px 0;\r\n    text-align: center;\r\n    font-size: 1rem;\r\n    color: #666666;\r\n`;\r\nconst SignFont = styled.span`\r\n    cursor: pointer;\r\n    color: #2691d9;\r\n    text-decoration: none;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { animateScroll as scroll, Link as LinkS } from 'react-scroll';\nimport { Link, useHistory } from 'react-router-dom';\nimport DURE from '../../images/DURE.png';\nimport { Nav, NavItem, NavDropdown, MenuItem, Navbar } from 'react-bootstrap';\nimport LoginModal from '../../pages/LoginPage/LoginModal';\nimport './css.css';\nimport { useSelector } from 'react-redux';\n// import { selectUser } from '../../Redux/store';\nimport { selectUser } from '../../Redux/userSlice';\nfunction NavBar(props) {\n    // const user = useSelector(selectUser);\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    //테스트\n    const history = useHistory();\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    };\n    const onChannelChange = (e, channel) => {\n        e.preventDefault();\n        history.push(`/${channel}`);\n    };\n    return (\n        // <Container>\n        //     <LogoContainer>\n        //         <Logo\n        //             src={DURE}\n        //             alt=\"Logo\"\n        //             onClick={() => {\n        //                 history.push('/');\n        //             }}\n        //         />\n        //         {/*<Navv>*/}\n        //         <NavDropdown title=\"게임소개\" id=\"DropBar\">\n        //             <NavLinkq\n        //                 to=\"banner\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>게임소개</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"character\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>캐릭터</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"worldview\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>세계관</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"media\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>미디어</NavDropdown.Item>\n        //             </NavLinkq>\n        //             {/**/}\n        //         </NavDropdown>\n        //\n        //         <NavLinks to=\"/login\">공지사항</NavLinks>\n        //         <NavLinks to=\"/login\">랭킹</NavLinks>\n        //         <NavLinks to=\"/upload\">커뮤니티</NavLinks>\n        //         {/*</Navv>*/}\n        //         <LoginModal />\n        //     </LogoContainer>\n        // </Container>\n        <Container>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand>\n                    <Logo\n                        src={DURE}\n                        alt=\"Logo\"\n                        onClick={() => {\n                            history.push('/');\n                        }}\n                    />\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"게임소개\">\n                            <NavLinkq\n                                to=\"banner\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>게임소개</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"character\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>캐릭터</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"worldview\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>세계관</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"media\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>미디어</NavDropdown.Item>\n                            </NavLinkq>\n                            {/**/}\n                        </NavDropdown>\n\n                        <Nav.Link\n                            href={'/Notice'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Notice');\n                            }}\n                        >\n                            공지사항\n                        </Nav.Link>\n                        <Nav.Link\n                            href={'/Ranking'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Ranking');\n                            }}\n                        >\n                            랭킹\n                        </Nav.Link>\n                        <Nav.Link\n                            href={'/Community'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Community');\n                            }}\n                        >\n                            커뮤니티\n                        </Nav.Link>\n                        {/*테스트*/}\n                        {user && (\n                            <Nav.Link\n                                href={'/mypage'}\n                                onClick={(e) => {\n                                    onChannelChange(e, `mypage/${user.id}`);\n                                }}\n                            >\n                                마이페이지\n                            </Nav.Link>\n                        )}\n                        {/*테스트*/}\n                    </Nav>\n                    <Nav>\n                        {/*<Nav.Link href=\"#deets\">More deets</Nav.Link>*/}\n                        {/*<Nav.Link eventKey={2} href=\"#memes\">*/}\n                        {/*    Dank memes*/}\n                        {/*</Nav.Link>*/}\n\n                        <LoginModal />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </Container>\n    );\n}\n\nconst NavLinkq = styled(LinkS)`\n    text-decoration: none;\n    color: #000;\n    font-size: 1.2rem;\n    font-weight: 400;\n    cursor: pointer;\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n    &.active {\n        border-bottom: 3px solid #01bf71;\n        transform: scale(1.04);\n        font-weight: 700;\n    }\n`;\nexport default NavBar;\nconst Drop = styled(NavDropdown)`\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n`;\nconst Container = styled.div`\n    width: 100%;\n    position: sticky;\n    z-index: 10;\n    top: 0;\n`;\nconst LogoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin: auto;\n    max-width: 1250px;\n    justify-content: space-between;\n    height: 5.8rem;\n    padding: 0.5rem 0;\n`;\nconst Navv = styled.div`\n    align-items: center;\n    height: 5.8rem;\n    padding: 0.5rem 0;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 75rem;\n    margin: auto;\n    background: red;\n`;\nconst Logo = styled.img`\n    width: 106px;\n    height: 55px;\n    cursor: pointer;\n`;\nconst NavLinks = styled(Link)`\n    text-decoration: none;\n    color: #000;\n    font-size: 1.2rem;\n    font-weight: 400;\n    cursor: pointer;\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n    &.active {\n        border-bottom: 3px solid #01bf71;\n        transform: scale(1.04);\n        font-weight: 700;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/brown_trash.d19c6d88.jpg\";","export default __webpack_public_path__ + \"static/media/tissue_trash.80d5723d.png\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-carousel/dist/react-bootstrap-carousel.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport trush1 from '../../../images/brown_trash.jpg';\nimport trush2 from '../../../images/tissue_trash.png';\nconst Banner = () => {\n    const [main, setMain] = useState([\n        {\n            backImage: trush1,\n            title: '흰색 돼지',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image:\n                'https://i.pinimg.com/564x/27/de/1f/27de1fbde83fb1441b19c2ec4743a76d.jpg',\n        },\n        {\n            backImage: trush2,\n            title: '엘사 딱가리',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image:\n                'https://i.pinimg.com/564x/27/de/1f/27de1fbde83fb1441b19c2ec4743a76d.jpg',\n        },\n        {\n            backImage:\n                'https://images.unsplash.com/photo-1537151625747-768eb6cf92b2?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZG9nfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n            title: '댕댕이',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image: trush1,\n        },\n        {\n            backImage: '',\n            title: '????????????',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image: trush2,\n        },\n    ]);\n\n    return (\n        <Container id=\"banner\">\n            <Carousel fade>\n                {main.map((array, index) => (\n                    <CarouselBox key={index}>\n                        {array.backImage && (\n                            <IMG\n                                className=\"d-block w-100\"\n                                src={array.backImage}\n                                alt=\"First slide\"\n                            />\n                        )}\n                        <Carousel.Caption>\n                            <img\n                                src={array.image}\n                                style={{ width: 300, height: 300 }}\n                            />\n                            <h3>{array.title}</h3>\n                            <p>{array.sub}</p>\n                        </Carousel.Caption>\n                    </CarouselBox>\n                ))}\n            </Carousel>\n        </Container>\n    );\n};\nconst CarouselBox = styled(Carousel.Item)`\n    height: 500px;\n    width: 100%;\n    background: orange;\n`;\nconst Container = styled.div``;\n\nconst IMG = styled.img`\n    width: 100%;\n    height: 500px;\n`;\nexport default Banner;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Character(props) {\r\n    return <Container id=\"character\">{/*<Content></Content>*/}</Container>;\r\n}\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    height: 1200px;\r\n    background: blue;\r\n`;\r\nexport default Character;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Worldview(props) {\r\n    return <Container id=\"worldview\">{/*<Content></Content>*/}</Container>;\r\n}\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    height: 1200px;\r\n    background: green;\r\n`;\r\nexport default Worldview;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    INSTAGRAM_URL,\n    NAVERBLOG_URL,\n    YOUTUBE_URL,\n    FACEBOOK_URL,\n} from '../../../constants/URL';\n\nfunction Medias(props) {\n    return (\n        <Container id=\"media\">\n            <SocialContainer>\n                <SocialBox\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={YOUTUBE_URL}\n                    style={{ background: 'rgb(199, 37, 45)' }}\n                >\n                    <Social className=\"fab fa-youtube\" />\n                </SocialBox>\n                <SocialBox\n                    style={{\n                        background:\n                            'linear-gradient(180deg, #ea9e38 0, #ef9337 8.33%, #f48838 16.67%, #f77a3a 25%, #f96b3d 33.33%, #fa5a41 41.67%, #f94646 50%, #f72c4c 58.33%, #f40054 66.67%, #f0005e 75%, #eb0069 83.33%, #e40075 91.67%, #db0082 100%)',\n                    }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={INSTAGRAM_URL}\n                >\n                    <Social className=\"fab fa-instagram\" />\n                </SocialBox>\n                <SocialBox\n                    style={{ background: 'rgb(60, 92, 153)' }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={FACEBOOK_URL}\n                >\n                    <Social className=\"fab fa-facebook-f\" />\n                </SocialBox>\n                <SocialBox\n                    style={{ background: 'rgb(58, 174, 56)' }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={NAVERBLOG_URL}\n                >\n                    <Social className=\"fab fa-blogger-b\" />\n                </SocialBox>\n            </SocialContainer>\n        </Container>\n    );\n}\n\nexport default Medias;\nconst Container = styled.div`\n    margin: auto;\n    width: 100%;\n    background: rgb(25, 28, 36);\n    padding-top: 2.75rem;\n    padding-bottom: 4.375rem;\n`;\nconst SocialBox = styled.a`\n    font-size: 3rem;\n    width: 80px;\n    height: 80px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    cursor: pointer;\n    border-radius: 50%;\n    text-decoration: none;\n    &: hover {\n        opacity: 0.8;\n    }\n`;\nconst SocialContainer = styled.div`\n    max-width: 55rem;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n\n    margin: auto;\n`;\nconst Social = styled.i`\n    color: white;\n`;\n","export const INSTAGRAM_URL = 'https://www.instagram.com/official_do_re/';\nexport const FACEBOOK_URL =\n    'https://www.facebook.com/%EB%91%90%EB%A6%AC-DoRE-103139068522900';\nexport const YOUTUBE_URL =\n    'https://www.youtube.com/channel/UCXaHtJS7sK3QpOfNHdPk2jQ';\nexport const NAVERBLOG_URL = 'https://blog.naver.com/qorehddn123';\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link as LinkS } from 'react-scroll';\r\nfunction Menubar(props) {\r\n    return (\r\n        <Container>\r\n            <Nav>\r\n                <NavLinks\r\n                    to=\"banner\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    게임소개\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"character\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    캐릭터\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"worldview\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    세계관\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"media\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    미디어\r\n                </NavLinks>\r\n                {/*<NavLinks*/}\r\n                {/*    to=\"worldview\"*/}\r\n                {/*    smooth={true}*/}\r\n                {/*    duration={500}*/}\r\n                {/*    spy={true}*/}\r\n                {/*    exact=\"true\"*/}\r\n                {/*    offset={-80}*/}\r\n                {/*>*/}\r\n                {/*    쿠폰입력*/}\r\n                {/*</NavLinks>*/}\r\n            </Nav>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Menubar;\r\nconst Container = styled.div`\r\n    height: 80px;\r\n    width: 100%;\r\n    background: #fff;\r\n    display: flex;\r\n    position: sticky;\r\n    //border-top: 10px solid red;\r\n    box-shadow: 0 2px 15px 0 rgb(0 0 0 / 70%);\r\n`;\r\n\r\nconst Nav = styled.div`\r\n    align-items: center;\r\n    height: 100%;\r\n    padding: 0.5rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    max-width: 75rem;\r\n    margin: auto;\r\n`;\r\n\r\nconst NavLinks = styled(LinkS)`\r\n    text-decoration: none;\r\n    color: #000;\r\n    font-size: 1.2rem;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ffe81e;\r\n        transform: scale(1.04);\r\n    }\r\n    &.active {\r\n        border-bottom: 3px solid #01bf71;\r\n        transform: scale(1.04);\r\n        font-weight: 700;\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Banner from './Banner/Banner';\r\nimport Character from './CharacterPage/Character';\r\nimport Worldview from './Worldview/Worldview';\r\nimport Medias from './Medias/Medias';\r\nimport Menubar from './Menubar/Menubar';\r\nimport styled from 'styled-components';\r\nfunction Home(props) {\r\n    const [hide, setHide] = useState(false);\r\n    const [pageY, setPageY] = useState(0);\r\n    const documentRef = useRef(document);\r\n\r\n    const handleScroll = () => {\r\n        const { pageYOffset } = window;\r\n        const deltaY = pageYOffset - pageY;\r\n        const hide = pageYOffset !== 0 && deltaY >= 0;\r\n        setHide(hide);\r\n        setPageY(pageYOffset);\r\n    };\r\n\r\n    useEffect(() => {\r\n        documentRef.current.addEventListener('scroll', handleScroll);\r\n        return () =>\r\n            documentRef.current.removeEventListener('scroll', handleScroll);\r\n    }, [pageY]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrap className={hide && 'hide'}>\r\n                <Menubar />\r\n            </HeaderWrap>\r\n\r\n            {/*<Menubar />*/}\r\n            <Banner />\r\n            <Character />\r\n            <Worldview />\r\n            <Medias />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst HeaderArea = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n    //position: fixed;\r\n    //top: 80px;\r\n    //left: 0;\r\n    position: fixed;\r\n    z-index: 9;\r\n    width: 100%;\r\n    height: 80px;\r\n    transition: 0.8s ease;\r\n    transform: translateY(-80px);\r\n    margin-top: -100px;\r\n    &.hide {\r\n        transform: translateY(0px);\r\n        margin-top: 0px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RegisterPage from '../RegisterPage/RegisterPage';\r\n\r\nfunction LoginPage(props) {\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <LoginLabel>Login</LoginLabel>\r\n                <Form method=\"post\">\r\n                    <TextBox>\r\n                        <Input type=\"text\" required />\r\n                        <Span></Span>\r\n                        <Label>Username</Label>\r\n                    </TextBox>\r\n                    <TextBox>\r\n                        <Input type=\"password\" required />\r\n                        <Span></Span>\r\n                        <Label>Password</Label>\r\n                    </TextBox>\r\n                    <ForgetContainer className=\"pass\">\r\n                        Forgot Password?\r\n                    </ForgetContainer>\r\n                    <SubmitBtn type=\"submit\" value=\"login\" />\r\n                    <SignContainer>\r\n                        Not a member?\r\n                        <SignFont href=\"register\">Signup</SignFont>\r\n                    </SignContainer>\r\n                </Form>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    position: absolute;\r\n    background: linear-gradient(120deg, #2980b9, #8e44ad);\r\n`;\r\nconst Content = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 400px;\r\n    background: white;\r\n    border-radius: 10px;\r\n`;\r\nconst LoginLabel = styled.h1`\r\n    text-align: center;\r\n    padding: 20px 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n`;\r\nconst Form = styled.form`\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n`;\r\nconst TextBox = styled.div`\r\n    position: relative;\r\n    border-bottom: 2px solid #adadad;\r\n    margin: 30px 0;\r\n`;\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    padding: 0 5px;\r\n    height: 40px;\r\n    font-size: 1rem;\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    &:focus ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:valid ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:focus ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n    &:valid ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5px;\r\n    color: #adadad;\r\n    transform: translateY(-50%);\r\n    font-size: 1rem;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n`;\r\nconst Span = styled.span`\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background: #2691d9;\r\n        transition: 0.5s;\r\n    }\r\n`;\r\nconst ForgetContainer = styled.div`\r\n    margin: -5px 0 20px 5px;\r\n    color: #a6a6a6;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\nconst SubmitBtn = styled.input`\r\n    width: 100%;\r\n    height: 50px;\r\n    border: 1px solid;\r\n    background: #2691d9;\r\n    border-radius: 25px;\r\n    font-size: 18px;\r\n    color: #e9f4fb;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        border-color: #2691d9;\r\n        transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst SignContainer = styled.div`\r\n    margin: 30px 0;\r\n    text-align: center;\r\n    font-size: 1rem;\r\n    color: #666666;\r\n`;\r\nconst SignFont = styled.a`\r\n    color: #2691d9;\r\n    text-decoration: none;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nfunction Help(props) {\n    const [isHelp, setIsHelp] = useState(false);\n    const onHandleHelp = (e) => {\n        setIsHelp(!isHelp);\n    };\n    return (\n        <Container>\n            <HelpBox>\n                <Social\n                    className={\n                        isHelp\n                            ? 'far fa-times-circle'\n                            : 'fas fa-question-circle'\n                    }\n                    onClick={onHandleHelp}\n                />\n            </HelpBox>\n            {isHelp && <HelpContainer></HelpContainer>}\n        </Container>\n    );\n}\nconst Container = styled.div`\n    position: fixed;\n    right: 12px;\n    bottom: 10px;\n    z-index: 10000;\n`;\n\nconst Social = styled.i`\n    color: #000;\n`;\nconst HelpBox = styled.div`\n    font-size: 3rem;\n    width: 80px;\n    height: 80px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    cursor: pointer;\n    border-radius: 50%;\n    text-decoration: none;\n    &: hover {\n        opacity: 0.8;\n    }\n`;\nconst HelpContainer = styled.div`\n    position: absolute;\n    background: red;\n    bottom: 0;\n    height: 300px;\n    right: calc(100% + 10px);\n    width: 360px;\n    -webkit-box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n`;\nexport default Help;\n","import React, { useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw, EditorState } from 'draft-js';\nimport styled from 'styled-components';\n\nfunction UploadPage(props) {\n    const [editor, setEditor] = useState(EditorState.createEmpty());\n    const onEditorChange = (editorState) => {\n        setEditor(editorState);\n    };\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n    };\n    // const uploadImageCallBack = (file) => {\n    //     return new Promise((resolve, reject) => {\n    //         const xhr = new XMLHttpRequest();\n    //         xhr.open(\n    //             'POST',\n    //             'http://example.com#access_token=ACCESS_TOKEN&token_type=Bearer&expires_in=3600'\n    //         );\n    //         xhr.setRequestHeader('Authorization', '-------');\n    //         const data = new FormData();\n    //         data.append('image', file);\n    //         xhr.send(data);\n    //         xhr.addEventListener('load', () => {\n    //             const response = JSON.parse(xhr.responseText);\n    //             console.log(response);\n    //             resolve(response);\n    //         });\n    //         xhr.addEventListener('error', () => {\n    //             console.log('error');\n    //             const error = JSON.parse(xhr.responseText);\n    //             reject(error);\n    //         });\n    //     });\n    // };\n    const uploadImageCallBack = (file) => {\n        console.log(URL.createObjectURL(file));\n        // console.log(file);\n        return new Promise((resolve, reject) => {\n            resolve({\n                data: { link: URL.createObjectURL(file) },\n            });\n        });\n    };\n\n    return (\n        <Container>\n            <Title> 게시글 등록</Title>\n            <form>\n                <div>\n                    <Editor\n                        editorStyle={{\n                            width: '100%',\n                            minHeight: 360,\n                            borderWidth: 1,\n                            borderStyle: 'solid',\n                            borderColor: 'lightgray',\n                        }}\n                        editorState={editor}\n                        toolbarClassName=\"toolbarClassName\"\n                        wrapperClassName=\"wrapperClassName\"\n                        editorClassName=\"editorClassName\"\n                        onEditorStateChange={onEditorChange}\n                        toolbar={{\n                            inline: { inDropdown: true },\n                            list: { inDropdown: true },\n                            textAlign: { inDropdown: true },\n                            link: { inDropdown: true },\n                            history: { inDropdown: true },\n                            image: {\n                                uploadCallback: uploadImageCallBack,\n                            },\n                        }}\n                    />\n\n                    <SubmitBtn\n                        style={{\n                            background:\n                                draftToHtml(\n                                    convertToRaw(editor.getCurrentContent())\n                                ).length === 8\n                                    ? 'red'\n                                    : '#f9f9f9',\n                        }}\n                        onClick={onHandleSubmit}\n                    >\n                        작성\n                    </SubmitBtn>\n                    <textarea\n                        style={{ width: '100%', height: 200 }}\n                        disabled\n                        value={draftToHtml(\n                            convertToRaw(editor.getCurrentContent())\n                        )}\n                    />\n                </div>\n            </form>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    max-width: 1250px;\n    margin: auto;\n    height: 1200px;\n    padding: 1.5rem;\n`;\nconst SubmitBtn = styled.button`\n    width: 200px;\n    height: 56px;\n    margin-top: 1.5rem;\n    border: 1px solid #e7e7e7;\n`;\nconst Title = styled.p`\n    font-family: Noto Sans KR;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 24px;\n    line-height: 35px;\n`;\n// export default UploadPage;\n\n//\n// import React from 'react';\n//\n// function UploadPage(props) {\n//     return <div>Upload</div>;\n// }\n\nexport default UploadPage;\n","import React from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nfunction PaginationComponent({ totalPage, page, handleChange }) {\n    return (\n        <div>\n            <Pagination\n                count={totalPage}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                page={page}\n                onChange={handleChange}\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                }}\n            />\n            {/*반응형 사용*/}\n            {/*<Pagination*/}\n            {/*    count={totalPage}*/}\n            {/*    variant=\"outlined\"*/}\n            {/*    shape=\"rounded\"*/}\n            {/*    value={page}*/}\n            {/*    onChange={handleChange}*/}\n            {/*    siblingCount={0}*/}\n            {/*    style={{*/}\n            {/*        display: 'flex',*/}\n            {/*        justifyContent: 'center',*/}\n            {/*    }}*/}\n            {/*/>*/}\n        </div>\n    );\n}\n\nexport default PaginationComponent;\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FailAlert } from '../../Alert/Alert';\r\nimport styled from 'styled-components';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport api from '../../settings/api';\r\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\r\n\r\nfunction NoticePage(props) {\r\n    const [noticePost, setNoticepost] = useState([]);\r\n    const [page, setPage] = useState(1); //현재 페이지\r\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\r\n    useEffect(() => {\r\n        fetchNotice();\r\n    }, []);\r\n    const handleChange = (e, value) => {\r\n        e.preventDefault();\r\n        setPage(value);\r\n        fetchNotice(value);\r\n    };\r\n    const fetchNotice = () => {\r\n        axios\r\n            .get('notices/')\r\n            .then((res) => {\r\n                console.log('공지사항 결과', res);\r\n                if (res.statusText !== 'OK') {\r\n                    // console.log(res);\r\n                    return;\r\n                }\r\n                setNoticepost(res.data.results);\r\n\r\n                setTotalPage(\r\n                    parseInt(res.data.count) !== 0\r\n                        ? parseInt(res.data.count) % 10 === 0\r\n                            ? parseInt(res.data.count / 10)\r\n                            : parseInt(res.data.count / 10) + 1\r\n                        : 1\r\n                );\r\n            })\r\n            .catch((err) => {\r\n                if (err.response?.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <Container>\r\n            <Title>공지사항</Title>\r\n            {/*<Table hover size=\"sm\" style={{ borderBottom: '4px solid #222' }}>*/}\r\n            {/*    <thead>*/}\r\n            {/*        <Headtr>*/}\r\n            {/*            <HeadTitleTH>제목</HeadTitleTH>*/}\r\n            {/*            <HeadUserTH>등록일</HeadUserTH>*/}\r\n            {/*        </Headtr>*/}\r\n            {/*    </thead>*/}\r\n            {/*    <tbody>*/}\r\n            {/*        {noticePost.map((post, index) => (*/}\r\n            {/*            <TR*/}\r\n            {/*                key={index}*/}\r\n            {/*                // onClick={(e) => {*/}\r\n            {/*                //     onClickToDetail(e, post.id);*/}\r\n            {/*                // }}*/}\r\n            {/*            >*/}\r\n            {/*                <ContentTitle>{post.title}</ContentTitle>*/}\r\n            {/*                <ContentSmall>*/}\r\n            {/*                    {post.created_at.substr(0, 10)}*/}\r\n            {/*                </ContentSmall>*/}\r\n            {/*            </TR>*/}\r\n            {/*        ))}*/}\r\n            {/*    </tbody>*/}\r\n            {/*</Table>*/}\r\n            {/**/}\r\n            {/**/}\r\n            {/**/}\r\n            <TableContainer>\r\n                <HeadTitle>제목</HeadTitle>\r\n                <HeadDate>등록일</HeadDate>\r\n            </TableContainer>\r\n            {noticePost.map((post, index) => (\r\n                <TableRowContainer\r\n                    key={index}\r\n                    // onClick={(e) => {\r\n                    //     onClickToDetail(e, post.id);\r\n                    // }}\r\n                >\r\n                    <div>\r\n                        <TitleRow>{post.title}</TitleRow>\r\n                        <CreatedRow>{post.created_at.substr(0, 10)}</CreatedRow>\r\n                    </div>\r\n                    <CreatedRow1>{post.created_at.substr(0, 10)}</CreatedRow1>\r\n                </TableRowContainer>\r\n            ))}\r\n            <hr\r\n                style={{\r\n                    backgroundColor: '#222',\r\n                    height: '1px',\r\n                    margin: 0,\r\n                }}\r\n            />\r\n            <PaginationComponent\r\n                totalPage={totalPage}\r\n                page={page}\r\n                handleChange={handleChange}\r\n            />\r\n            {/*<Pagination*/}\r\n            {/*    count={totalPage}*/}\r\n            {/*    variant=\"outlined\"*/}\r\n            {/*    shape=\"rounded\"*/}\r\n            {/*    page={page}*/}\r\n            {/*    onChange={handleChange}*/}\r\n            {/*    style={{*/}\r\n            {/*        display: 'flex',*/}\r\n            {/*        justifyContent: 'center',*/}\r\n            {/*    }}*/}\r\n            {/*/>*/}\r\n        </Container>\r\n    );\r\n}\r\nconst HeadTitle = styled.p`\r\n    margin: 0;\r\n    font-weight: 600;\r\n    color: #000;\r\n    font-size: 20px;\r\n`;\r\nconst HeadDate = styled.p`\r\n    margin: 0;\r\n    font-weight: 600;\r\n    color: #000;\r\n    font-size: 20px;\r\n    @media only screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Date = styled.div`\r\n    display: block;\r\n    @media only screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst TitleRow = styled.p`\r\n    margin: 0;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n`;\r\nconst CreatedRow = styled.p`\r\n    margin: 0;\r\n    color: #777777;\r\n    display: none;\r\n    font-weight: bolder;\r\n    @media only screen and (max-width: 768px) {\r\n        display: block;\r\n    }\r\n`;\r\nconst CreatedRow1 = styled.p`\r\n    margin: 0;\r\n    color: #777777;\r\n    display: block;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    font-weight: bolder;\r\n    @media only screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst TableRowContainer = styled.div`\r\n    border-top: 1px solid #dee2e6;\r\n    align-items: center;\r\n    padding: 17px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: #dbd7d7;\r\n    }\r\n`;\r\nconst TableContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 3px solid #919191;\r\n    border-top: 4px solid #222;\r\n    padding: 17px 21px 16px;\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n    font-family: 'NotoSansKR', sans-serif;\r\n    font-weight: bold;\r\n`;\r\n//\r\n//\r\n//\r\n\r\nconst Container = styled.div`\r\n    max-width: 1100px;\r\n    padding: 1.5rem;\r\n    margin: 3rem auto auto;\r\n`;\r\nconst TR = styled.tr`\r\n    cursor: pointer;\r\n`;\r\nconst TH = styled.th`\r\n    line-height: 3.25;\r\n    font-size: 1.2rem;\r\n    color: #000000;\r\n`;\r\nconst HeadTitleTH = styled(TH)`\r\n    //text-align: left;\r\n    //width: 75%;\r\n    //white-space: nowrap;\r\n    //font-family: 'NotoSansKR', sans-serif;\r\n    text-align: left;\r\n    width: 80%;\r\n    min-width: 4.3rem;\r\n`;\r\nconst HeadUserTH = styled(TH)`\r\n    text-align: center;\r\n    width: 10%;\r\n    min-width: 4.3rem;\r\n`;\r\n\r\nconst Headtr = styled.tr`\r\n    border-bottom: 3px solid #919191;\r\n    border-top: 4px solid #222;\r\n`;\r\nconst TD = styled.td`\r\n    line-height: 3.25;\r\n    font-weight: normal;\r\n    text-overflow: ellipsis;\r\n`;\r\nconst ContentTitle = styled(TD)`\r\n    text-align: left;\r\n`;\r\n\r\nconst ContentSmall = styled(TD)`\r\n    text-align: center;\r\n`;\r\nconst Title = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 40px;\r\n    color: #000;\r\n    line-height: 54px;\r\n    letter-spacing: -3px;\r\n    margin-bottom: 4.5rem;\r\n`;\r\nexport default NoticePage;\r\n","import React from 'react';\n\nfunction RakingPage(props) {\n    return <div>RakingPage</div>;\n}\n\nexport default RakingPage;\n","export const calculateChatDate = (d) => {\n    if (d === null) return '';\n\n    const today = new Date();\n    const target = new Date(d);\n    const diffM = Math.floor((today.getTime() - target.getTime()) / 1000 / 60);\n    if (diffM < 1) return '방금전';\n    if (diffM < 60) return `${diffM}분 전`;\n\n    const diffH = Math.floor(diffM / 60);\n    if (diffH < 24) return `${diffH}시간 전`;\n\n    const diffD = Math.floor(diffH / 24);\n    if (diffD < 365) return `${diffD}일 전`;\n\n    return `${Math.floor(diffD / 365)}년 전`;\n};\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { calculateChatDate } from '../../Util/Util';\n\nfunction CommunityTable({ posts }) {\n    const history = useHistory();\n    const onClickToDetail = (e, postId) => {\n        history.push(`/post/${postId}`);\n    };\n    return (\n        <div>\n            <Table hover size=\"sm\">\n                <thead>\n                    <Headtr>\n                        <HeadTitleTH>제목</HeadTitleTH>\n                        <HeadUserTH>유저</HeadUserTH>\n                        <HeadSmallTH>댓글</HeadSmallTH>\n                        <HeadSmallTH>조회 수</HeadSmallTH>\n                        <HeadSmallTH>활동</HeadSmallTH>\n                    </Headtr>\n                </thead>\n                <tbody>\n                    {posts.map((post, index) => (\n                        <TR\n                            key={index}\n                            onClick={(e) => {\n                                onClickToDetail(e, post.id);\n                            }}\n                        >\n                            <ContentTitle>\n                                {post.title}\n                                {post.image && (\n                                    <ImageIcon className=\"far fa-file-image\" />\n                                )}\n                            </ContentTitle>\n                            <ContentUser>{post.user.nickname}</ContentUser>\n                            <ContentSmall>{post.review_count}</ContentSmall>\n                            <ContentSmall>{post.hit_count}</ContentSmall>\n                            <ContentSmall>\n                                {calculateChatDate(post.created_at)}\n                            </ContentSmall>\n                        </TR>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nconst SpinnerContainer = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst TR = styled.tr`\n    cursor: pointer;\n`;\nconst ImageIcon = styled.i`\n    margin-left: 5px;\n    color: #2691d9;\n`;\nconst TH = styled.th`\n    line-height: 3.25;\n    font-size: 1rem;\n    color: #919191;\n`;\nconst HeadTitleTH = styled(TH)`\n    text-align: left;\n    width: 75%;\n    white-space: nowrap;\n`;\nconst HeadUserTH = styled(TH)`\n    text-align: center;\n    width: 10%;\n    min-width: 4.3rem;\n    white-space: nowrap;\n`;\nconst HeadSmallTH = styled(TH)`\n    width: 5%;\n    min-width: 4.9rem;\n    text-align: center;\n`;\nconst Headtr = styled.tr`\n    border-bottom: 3px solid #919191;\n    border-top: hidden;\n`;\nconst TD = styled.td`\n    line-height: 2.25;\n`;\nconst ContentTitle = styled(TD)`\n    text-align: left;\n`;\nconst ContentUser = styled(TD)`\n    text-align: center;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 1; /* number of lines to show */\n    -webkit-box-orient: vertical;\n`;\nconst ContentSmall = styled(TD)`\n    text-align: center;\n`;\nexport default CommunityTable;\n","import React from 'react';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { calculateChatDate } from '../../Util/Util';\r\nimport styled from 'styled-components';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction CommunityBig({ posts }) {\r\n    const history = useHistory();\r\n    const onClickToDetail = (e, postId) => {\r\n        history.push(`/post/${postId}`);\r\n    };\r\n    return (\r\n        <div>\r\n            {posts.map((post, index) => (\r\n                <Post\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                        onClickToDetail(e, post.id);\r\n                    }}\r\n                >\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            <PostTitle>{post.title}</PostTitle>\r\n                            <PostContent>{post.content}</PostContent>\r\n                            <PostInforBox>\r\n                                <Breadcrumb>\r\n                                    <Breadcrumb.Item active>\r\n                                        조회수 {post.hit_count}\r\n                                    </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item active>\r\n                                        댓글 {post.review_count}\r\n                                    </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item active>\r\n                                        {/*55분 전*/}\r\n                                        {calculateChatDate(post.created_at)}\r\n                                    </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item active>\r\n                                        {post.user.nickname}\r\n                                    </Breadcrumb.Item>\r\n                                </Breadcrumb>\r\n                            </PostInforBox>\r\n                        </div>\r\n                        {post.image && (\r\n                            <div>\r\n                                <PostImg src={post.image} alt=\"img\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Post>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nconst Post = styled.div`\r\n    width: 100%;\r\n    height: 219.85px;\r\n    padding: 2rem 1rem;\r\n    margin-top: 1.5rem;\r\n    background: #ffffff;\r\n    border: 8px solid #f5f5f5;\r\n    box-sizing: border-box;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\nconst PostImg = styled.img`\r\n    width: 10rem;\r\n    height: 10rem;\r\n    margin-left: 1.5rem;\r\n`;\r\nconst PostTitle = styled.p`\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    line-height: 127.5%;\r\n    color: #001129;\r\n`;\r\nconst PostContent = styled.p`\r\n    //text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2; /* number of lines to show */\r\n    -webkit-box-orient: vertical;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 23px;\r\n    color: #5a5a5a;\r\n`;\r\nconst PostInforBox = styled.div`\r\n    height: 40px;\r\n    background: #f1f1f1;\r\n    border: 1px solid #f4f4f4;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n// 사진있는 이위에는 포스트 관련 styled-component\r\n\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    padding: 2rem 2rem;\r\n`;\r\nconst Title = styled.p`\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 36px;\r\n    line-height: 127.5%;\r\n    color: #001129;\r\n`;\r\nconst Subtitle = styled.p`\r\n    font-family: Noto Sans KR;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n\r\n    color: #666666;\r\n`;\r\nconst InputGroups = styled(InputGroup)`\r\n    max-width: 800px;\r\n    margin: 1.5rem auto auto;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    border-radius: 0.25rem;\r\n`;\r\nconst SearchBtn = styled(Button)`\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    background: #052065;\r\n    color: #ffffff;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n`;\r\nconst InputForm = styled(FormControl)`\r\n    height: 44px;\r\n    :focus {\r\n        border-color: #ff0000;\r\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\r\n            0 0 8px rgba(255, 0, 0, 0.6);\r\n    }\r\n`;\r\nexport default CommunityBig;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { SampleData } from '../../SampleData/SampleData';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport styled from 'styled-components';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { useSelector } from 'react-redux';\r\n// import { selectUser } from '../../Redux/store';\r\nimport { selectUser } from '../../Redux/userSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FailAlert, SuccessAlert } from '../../Alert/Alert';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport CommunityTable from './CommunityTable';\r\nimport CommunityBig from './CommunityBig';\r\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\r\n\r\nfunction CommunityPage(props) {\r\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\r\n    const [posts, setPosts] = useState([]);\r\n    const [isDisplay, setIsDisplay] = useState('big');\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1); //현재 페이지\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    // const user = useSelector(selectUser);\r\n    const auth = useSelector((state) => state.auth);\r\n    const { user } = auth;\r\n    const history = useHistory();\r\n    const onChangeDisplay = (e, Display) => {\r\n        setIsDisplay(Display);\r\n    };\r\n    const handleChange = (e, value) => {\r\n        setPage(value);\r\n        fetchPost(value);\r\n    };\r\n    useEffect(() => {\r\n        fetchPost(page);\r\n    }, []);\r\n\r\n    const fetchPost = (page, keyword) => {\r\n        let params = { page };\r\n        if (keyword) {\r\n            params.keyword = keyword;\r\n        }\r\n        // console.log(params);\r\n        axios\r\n            .get(`/posts/`, { params }, { withCredentials: true })\r\n            .then((res) => {\r\n                if (res.statusText !== 'OK') {\r\n                    // console.log(res);\r\n                    return;\r\n                }\r\n                // console.log(res);\r\n                if (res.data.count === 0) {\r\n                    FailAlert('게시글이 존재하지 않습니다');\r\n                    return;\r\n                }\r\n                setPosts(res.data.results);\r\n                setTotalPage(\r\n                    parseInt(res.data.count) !== 0\r\n                        ? parseInt(res.data.count) % 20 === 0\r\n                            ? parseInt(res.data.count / 20)\r\n                            : parseInt(res.data.count / 20) + 1\r\n                        : 1\r\n                );\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data?.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                    alert(err.response.data.msg);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SpinnerContainer>\r\n                    <Spinner animation=\"border\" />\r\n                    <h2>&nbsp; 로딩 중 ...</h2>\r\n                </SpinnerContainer>\r\n            ) : (\r\n                <Container>\r\n                    <div>\r\n                        <Title>커뮤니티</Title>\r\n                        <Subtitle>사람들과 지식을 공유해보세요</Subtitle>\r\n                        <form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                fetchPost(1, search);\r\n                            }}\r\n                        >\r\n                            <InputGroups>\r\n                                <InputForm\r\n                                    // onSubmit={() => fetchPost(1, search)}\r\n                                    placeholder=\"검색어\"\r\n                                    value={search}\r\n                                    onChange={(e) => {\r\n                                        setSearch(e.target.value);\r\n                                    }}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <SearchBtn\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            fetchPost(1, search);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fas fa-search\" />\r\n                                        검색\r\n                                    </SearchBtn>\r\n                                </InputGroup.Append>\r\n                            </InputGroups>\r\n                        </form>\r\n                        <IconBox>\r\n                            <div>\r\n                                {user && (\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            history.push('/upload');\r\n                                        }}\r\n                                    >\r\n                                        글쓰기\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <Icons\r\n                                    className=\"fas fa-th-large\"\r\n                                    style={{\r\n                                        color:\r\n                                            isDisplay !== 'big'\r\n                                                ? '#000'\r\n                                                : '#7fff00',\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        onChangeDisplay(e, 'big');\r\n                                    }}\r\n                                />\r\n                                <Icons\r\n                                    className=\"fas fa-list\"\r\n                                    style={{\r\n                                        color:\r\n                                            isDisplay !== 'small'\r\n                                                ? '#000'\r\n                                                : '#7fff00',\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        onChangeDisplay(e, 'small');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </IconBox>\r\n\r\n                        {isDisplay === 'big' ? (\r\n                            <CommunityBig posts={posts} />\r\n                        ) : (\r\n                            <CommunityTable posts={posts} />\r\n                        )}\r\n                        <PaginationComponent\r\n                            totalPage={totalPage}\r\n                            page={page}\r\n                            handleChange={handleChange}\r\n                        />\r\n                        {/*<Pagination*/}\r\n                        {/*    count={totalPage}*/}\r\n                        {/*    variant=\"outlined\"*/}\r\n                        {/*    shape=\"rounded\"*/}\r\n                        {/*    page={page}*/}\r\n                        {/*    onChange={handleChange}*/}\r\n                        {/*    style={{*/}\r\n                        {/*        display: 'flex',*/}\r\n                        {/*        justifyContent: 'center',*/}\r\n                        {/*    }}*/}\r\n                        {/*/>*/}\r\n                        {/*반응형 사용*/}\r\n                        {/*<Pagination*/}\r\n                        {/*    count={totalPage}*/}\r\n                        {/*    variant=\"outlined\"*/}\r\n                        {/*    shape=\"rounded\"*/}\r\n                        {/*    value={page}*/}\r\n                        {/*    onChange={handleChange}*/}\r\n                        {/*    siblingCount={0}*/}\r\n                        {/*    style={{*/}\r\n                        {/*        display: 'flex',*/}\r\n                        {/*        justifyContent: 'center',*/}\r\n                        {/*    }}*/}\r\n                        {/*/>*/}\r\n                    </div>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nconst SpinnerContainer = styled.div`\r\n    position: fixed;\r\n    z-index: 999;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n//이위는 게시글 작게보기\r\nconst IconBox = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0rem 1rem;\r\n    margin-top: 1rem;\r\n`;\r\nconst Icons = styled.i`\r\n    font-size: 1.2rem;\r\n    margin-left: 1.2rem;\r\n    cursor: pointer;\r\n`;\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    padding: 2rem 2rem;\r\n`;\r\nconst Title = styled.p`\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 36px;\r\n    line-height: 127.5%;\r\n    color: #001129;\r\n`;\r\nconst Subtitle = styled.p`\r\n    font-family: Noto Sans KR;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n\r\n    color: #666666;\r\n`;\r\nconst InputGroups = styled(InputGroup)`\r\n    max-width: 800px;\r\n    margin: 1.5rem auto auto;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    border-radius: 0.25rem;\r\n`;\r\nconst SearchBtn = styled(Button)`\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    background: #052065;\r\n    color: #ffffff;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n`;\r\nconst InputForm = styled(FormControl)`\r\n    height: 44px;\r\n    :focus {\r\n        border-color: #ff0000;\r\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\r\n            0 0 8px rgba(255, 0, 0, 0.6);\r\n    }\r\n`;\r\nexport default CommunityPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FailAlert, SuccessAlert } from '../../Alert/Alert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport trush from '../../images/brown_trash.jpg';\r\nimport 'moment/locale/ko';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport trush1 from '../../images/tissue_trash.png';\r\nimport { useSelector } from 'react-redux';\r\n// import { selectUser } from '../../Redux/store';\r\nimport { selectUser } from '../../Redux/userSlice';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\r\nfunction DetailPage(props) {\r\n    // const user = useSelector(selectUser);\r\n    const auth = useSelector((state) => state.auth);\r\n    const { user } = auth;\r\n    const [reviewText, setReviewText] = useState('');\r\n    const [post, setPost] = useState([]);\r\n    const [reviews, setReviews] = useState([]);\r\n    const postId = props.match.params.postId; ///URL 에서 가져옴\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(1); //현재 페이지\r\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\r\n    const [totalReview, setTotalReview] = useState(0); //총 리뷰 갯수\r\n    const handleChange = (e, value) => {\r\n        // e.preventDefault();\r\n        setPage(value);\r\n        fetchReview(value);\r\n    };\r\n    useEffect(() => {\r\n        fetchPost();\r\n        fetchReview(1);\r\n    }, []);\r\n    const onSubmitReview = (e) => {\r\n        // e.preventDefault();\r\n        if (!reviewText.length) {\r\n            FailAlert('댓글을 입력해주세요');\r\n            return;\r\n        }\r\n        let params = {\r\n            post: postId,\r\n            content: reviewText,\r\n        };\r\n\r\n        axios\r\n            .post('/reviews/', params)\r\n            .then((res) => {\r\n                if (res.statusText !== 'Created') {\r\n                    console.log(res);\r\n                    return;\r\n                }\r\n                SuccessAlert('댓글작성 성공');\r\n                fetchReview(1);\r\n                setPage(1);\r\n                setReviewText('');\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err.response);\r\n                }\r\n            });\r\n    };\r\n    const fetchPost = () => {\r\n        axios\r\n            .get(`/posts/${postId}/`)\r\n            .then((res) => {\r\n                if (res.statusText !== 'OK') {\r\n                    FailAlert('존재하지 않는 게시글 입니다');\r\n                    return;\r\n                }\r\n                // console.log(res);\r\n                setPost(res.data);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err);\r\n                    FailAlert('존재하지 않는 게시글 입니다');\r\n                    history.push('/');\r\n                }\r\n            });\r\n    };\r\n    const fetchReview = (page) => {\r\n        let params = { page };\r\n        axios\r\n            .get(`/reviews/?post=${postId}`, { params })\r\n            .then((res) => {\r\n                // console.log('res', res);\r\n                if (res.statusText !== 'OK') {\r\n                    // console.log(res);\r\n                    return;\r\n                }\r\n                setReviews(res.data.results);\r\n                setTotalPage(\r\n                    parseInt(res.data.count) !== 0\r\n                        ? parseInt(res.data.count) % 4 === 0\r\n                            ? parseInt(res.data.count / 4)\r\n                            : parseInt(res.data.count / 4) + 1\r\n                        : 1\r\n                );\r\n                setTotalReview(res.data.count);\r\n                // console.log('댓글불러오기 성공', res);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <Container>\r\n            {/*{console.log('제목', post.title)}*/}\r\n            {/*{console.log('내용', post.content)}*/}\r\n            {/*{console.log(reviews)}*/}\r\n            <h1>{postId}</h1>\r\n            {/*리뷰*/}\r\n            <ReviewContainer>\r\n                <TitleContainer>\r\n                    <TotalReview>\r\n                        댓글\r\n                        <TotalReviewCount>{totalReview}</TotalReviewCount>\r\n                    </TotalReview>\r\n                </TitleContainer>\r\n                {reviews.map((review) => (\r\n                    <ReviewBox key={review.id}>\r\n                        <AvartarContainer\r\n                            style={{\r\n                                // backgroundImage: `url(${trush1})`,\r\n\r\n                                backgroundImage:\r\n                                    'url(https://i.pinimg.com/originals/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg)',\r\n                            }}\r\n                        >\r\n                            {/*<Avartar*/}\r\n                            {/*    src={trush1}*/}\r\n                            {/*    // src={*/}\r\n                            {/*    //     'https://i.pinimg.com/originals/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg'*/}\r\n                            {/*    // }*/}\r\n                            {/*/>*/}\r\n                        </AvartarContainer>\r\n                        <ReviewinfoBox>\r\n                            <div>\r\n                                <ReviewUser>{review.user.nickname}</ReviewUser>\r\n                                <ReviewDate>\r\n                                    {moment(review.created_at)\r\n                                        .subtract(10, 'days')\r\n                                        .calendar()}\r\n                                    {moment(review.created_at).format('LTS')}\r\n                                    {/*{moment(review.created_at).format('LLLL')}*/}\r\n                                </ReviewDate>\r\n                            </div>\r\n                            <ReviewContent>{review.content}</ReviewContent>\r\n                        </ReviewinfoBox>\r\n                    </ReviewBox>\r\n                ))}\r\n                <PaginationComponent\r\n                    totalPage={totalPage}\r\n                    page={page}\r\n                    handleChange={handleChange}\r\n                />\r\n                {/*<Pagination*/}\r\n                {/*    count={totalPage}*/}\r\n                {/*    variant=\"outlined\"*/}\r\n                {/*    shape=\"rounded\"*/}\r\n                {/*    page={page}*/}\r\n                {/*    onChange={handleChange}*/}\r\n                {/*    style={{*/}\r\n                {/*        display: 'flex',*/}\r\n                {/*        justifyContent: 'center',*/}\r\n                {/*    }}*/}\r\n                {/*/>*/}\r\n                {/*<InputForm as=\"textarea\" aria-label=\"With textarea\" />*/}\r\n                <ReviewSubmitBox>\r\n                    <TextArea\r\n                        value={reviewText}\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows={4}\r\n                        maxLength=\"99\"\r\n                        disabled={!user}\r\n                        placeholder={\r\n                            user\r\n                                ? '댓글을 입력 해보세요!'\r\n                                : '로그인 후, 이용해주세요'\r\n                        }\r\n                        onChange={(e) => {\r\n                            // reviewText.length < 100 &&\r\n                            setReviewText(e.currentTarget.value);\r\n                        }}\r\n                    />\r\n                    <BottomContainer>\r\n                        <CountReviewText>\r\n                            {reviewText.length}/100\r\n                        </CountReviewText>\r\n                        <SubmitButton\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            onClick={onSubmitReview}\r\n                            disabled={!user}\r\n                        >\r\n                            등록\r\n                        </SubmitButton>\r\n                    </BottomContainer>\r\n                </ReviewSubmitBox>\r\n            </ReviewContainer>\r\n        </Container>\r\n    );\r\n}\r\nconst BottomContainer = styled.div`\r\n    align-items: center;\r\n    margin-top: 0.7rem;\r\n`;\r\nconst CountReviewText = styled.span`\r\n    text-align: center;\r\n    align-items: center;\r\n    margin-right: 0.5rem;\r\n`;\r\nconst SubmitButton = styled(Button)``;\r\nconst ReviewSubmitBox = styled.div`\r\n    height: 203px;\r\n    background-color: #e8eaee;\r\n    border: 1px solid #dcdde1;\r\n    padding: 1rem;\r\n    text-align: right;\r\n`;\r\nconst TextArea = styled.textarea`\r\n    resize: none;\r\n    height: 130px;\r\n    padding: 10px 10px 10px 15px;\r\n`;\r\nconst InputForm = styled(FormControl)`\r\n    height: 44px;\r\n    :focus {\r\n        border-color: #ff0000;\r\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\r\n            0 0 8px rgba(255, 0, 0, 0.6);\r\n    }\r\n`;\r\nconst AvartarContainer = styled.div`\r\n    width: 70px;\r\n    height: 60px;\r\n\r\n    border-radius: 50%;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n`;\r\nconst Avartar = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n`;\r\nconst ReviewContent = styled.p`\r\n    font-size: 13px;\r\n    color: #666666;\r\n    line-height: 20px;\r\n    word-break: break-all;\r\n    word-wrap: break-word;\r\n    margin-bottom: 0px;\r\n`;\r\nconst ReviewDate = styled.span`\r\n    margin-left: 5px;\r\n    font-size: 12px;\r\n    color: #888;\r\n`;\r\nconst ReviewUser = styled.span`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    line-height: 1;\r\n`;\r\nconst ReviewBox = styled.div`\r\n    width: 100%;\r\n    height: 110px;\r\n    border-bottom: 1px solid #e3e3e3;\r\n    padding: 25px 1rem;\r\n    display: flex;\r\n`;\r\nconst ReviewinfoBox = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-left: 1rem;\r\n    //border-bottom: 1px solid #e3e3e3;\r\n    //padding: 25px 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n`;\r\nconst Container = styled.div`\r\n    margin: auto;\r\n    max-width: 1250px;\r\n`;\r\nconst ReviewContainer = styled.div`\r\n    margin: auto;\r\n    max-width: 900px;\r\n`;\r\nconst TitleContainer = styled.div`\r\n    width: 100%;\r\n    align-items: center;\r\n    border-top: 1px solid #e3e3e3;\r\n    border-bottom: 1px solid #e3e3e3;\r\n    background-color: #f9f9f9;\r\n    height: 44px;\r\n    //padding: 0.4rem 2rem;\r\n    line-height: 40px;\r\n`;\r\n\r\nconst TotalReview = styled.p`\r\n    font-size: 16px;\r\n    color: #333333;\r\n    margin-left: 2rem;\r\n`;\r\nconst TotalReviewCount = styled.span`\r\n    font-size: 16px;\r\n    color: #f68400;\r\n    margin-left: 5px;\r\n`;\r\nexport default DetailPage;\r\n","import React from 'react';\n\nfunction Mypage(props) {\n    return <div>mypage</div>;\n}\n\nexport default Mypage;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nfunction PostBox({ post }) {\n    const [expanded, setExpanded] = React.useState(false);\n    const onClickShowmore = () => {\n        setExpanded(!expanded);\n    };\n    return (\n        <Container>\n            <Box>\n                <Image src={post.image} alt=\"test\" />\n                <RightContainer>\n                    <TextBox>\n                        <Title>{post.title}</Title>\n                        <ICON\n                            onClick={onClickShowmore}\n                            className={\n                                expanded ? 'fas fa-minus' : 'fas fa-plus'\n                            }\n                        />\n                    </TextBox>\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <TYpography paragraph>{post.content}</TYpography>\n                    </Collapse>\n                </RightContainer>\n            </Box>\n        </Container>\n    );\n}\nconst RightContainer = styled.div`\n    width: 100%;\n    margin: auto 0;\n    padding: 0 1rem;\n`;\nconst TYpography = styled(Typography)`\n    padding: 0 16px 0 0;\n    word-break: keep-all;\n    white-space: pre-line;\n`;\nconst ICON = styled.i`\n    background: transparent;\n    font-size: 1rem;\n    border: 3px solid #20c997;\n    border-radius: 50%;\n    color: #20c997; ;\n`;\nconst Title = styled.span`\n    color: #67696d;\n    line-height: 1.5;\n    font-size: 1rem;\n    font-weight: bold;\n`;\nconst Container = styled.div`\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-top: 1rem;\n    width: 370px;\n    box-shadow: rgb(175 181 186 / 30%) 0px 2px 6px 0px,\n        rgb(175 181 186 / 30%) 0px -1px 6px 0px;\n    box-sizing: inherit;\n`;\nconst TextBox = styled.div`\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: space-between;\n    height: 90px;\n`;\nconst Box = styled.div`\n    width: 100%;\n    min-height: 90px;\n    display: flex;\n`;\nconst Image = styled.img`\n    width: 84px;\n    height: 90px;\n`;\nexport default PostBox;\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SampleData } from '../../../SampleData/SampleData';\r\nimport PostBox from './postBox';\r\nimport axios from 'axios';\r\nimport { FailAlert } from '../../../Alert/Alert';\r\n\r\nfunction RecycleBox(props) {\r\n    useEffect(() => {\r\n        fetchQuiz();\r\n    }, []);\r\n    const [recycles, setRecycles] = useState({});\r\n    const fetchQuiz = () => {\r\n        axios\r\n            .get('/recycle_infos/')\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.statusText !== 'OK') {\r\n                    console.log(res);\r\n                    return;\r\n                }\r\n                let data = res.data.results;\r\n                let newRecycleInfos = Object.assign({}, recycles);\r\n\r\n                data.forEach((recycleInfo) => {\r\n                    let category = recycleInfo.category;\r\n                    if (!newRecycleInfos.hasOwnProperty(category)) {\r\n                        newRecycleInfos[category] = [];\r\n                    }\r\n                    newRecycleInfos[category].push(recycleInfo);\r\n                });\r\n                setRecycles(newRecycleInfos);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response?.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err.response);\r\n                }\r\n            });\r\n    };\r\n    console.log('infos', recycles);\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                {/*left*/}\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>일반쓰레기</Title>\r\n                    </TitleBox>\r\n                    {recycles['일반쓰레기']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n                {/*center*/}\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>분리수거</Title>\r\n                    </TitleBox>\r\n                    {recycles['분리수거']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n                {/*right*/}\r\n\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>그 외 제품</Title>\r\n                    </TitleBox>\r\n                    {recycles['그 외 제품']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\nconst Title = styled.p`\r\n    color: #065920;\r\n    font-size: 1.5rem;\r\n    line-height: 1.75rem;\r\n    font-family: Roboto;\r\n    font-weight: 900;\r\n`;\r\nconst TitleBox = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    align-items: center;\r\n\r\n    box-shadow: rgb(0 0 0 / 10%) 0px 6px 6px 0px;\r\n`;\r\nconst Container = styled.div`\r\n    background: #f4f4f4;\r\n    width: 100%;\r\n`;\r\nconst Content = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    //flex-direction: column;\r\n`;\r\nconst BoxContainer = styled.div``;\r\nexport default RecycleBox;\r\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nfunction AccordionContainer({ quiz }) {\n    return (\n        <div>\n            <Accordion style={{ borderBottom: '2px solid black' }}>\n                <AccordionSummary\n                    expandIcon={<i className=\"fas fa-angle-down\" />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <TYpography variant=\"h7\">{quiz.question}</TYpography>\n                </AccordionSummary>\n                <SolutionBox>\n                    <RealityFont>정답 : {quiz.answer}</RealityFont>\n                    <SolutionFont>{quiz.content}</SolutionFont>\n                </SolutionBox>\n            </Accordion>\n        </div>\n    );\n}\nconst SolutionBox = styled.div`\n    padding: 0 3rem 1rem;\n    margin-top: 0;\n`;\nconst TYpography = styled(Typography)`\n    padding: 1rem 0px;\n    font-size: 1rem;\n    font-weight: bolder;\n`;\nconst RealityFont = styled.p`\n    margin-bottom: 0;\n    font-size: 1.3rem;\n    line-height: 1.5;\n    color: #67696d;\n    font-weight: bolder;\n`;\nconst SolutionFont = styled.p`\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #67696d;\n    margin-top: 0.5rem;\n`;\nexport default AccordionContainer;\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { QuizSample } from '../../../SampleData/SampleData';\r\nimport AccordionContainer from './AccordionContainer';\r\nimport axios from 'axios';\r\nimport { FailAlert, SuccessAlert } from '../../../Alert/Alert';\r\n\r\nfunction Quiz(props) {\r\n    const [quizs, setQuizs] = useState([]);\r\n    useEffect(() => {\r\n        FetchQuiz();\r\n    }, []);\r\n    const FetchQuiz = () => {\r\n        axios\r\n            .get('/quizzes/')\r\n            .then((res) => {\r\n                if (res.statusText !== 'OK') {\r\n                    console.log(res);\r\n                    return;\r\n                }\r\n                setQuizs(res.data.results);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err.response);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <Container>\r\n            {console.log(quizs)}\r\n            <Content>\r\n                <h1>재활용 QUIZ</h1>\r\n                <p>\r\n                    여러분의 쓰레기가 오염되지 않도록 하고 재활용 과정을 거쳐\r\n                    다음 생까지 깨끗한 환경을 만들 수 있도록 <br /> 돕는 퀴즈를\r\n                    통해 재활용 IQ를 성장 시키세요. <br /> 올바른 재활용을 통해\r\n                    다른 사람과 환경을 보호 하려면 문제를 통해 배우십시오.\r\n                </p>\r\n                {quizs.map((quiz, index) => (\r\n                    <AccordionContainer quiz={quiz} key={quiz.id} />\r\n                ))}\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 3rem;\r\n`;\r\nconst Content = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n`;\r\nexport default Quiz;\r\n","import React from 'react';\n\nimport RecycleBox from './RecycleBox/RecycleBox';\nimport Quiz from './Quiz/Quiz';\nfunction RecyclingPage(props) {\n    return (\n        <>\n            <RecycleBox />\n            <Quiz />\n        </>\n    );\n}\nexport default RecyclingPage;\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    useHistory,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport Navbar from './components/Navbar/NavBar';\r\nimport Home from './pages/MainPage/home';\r\nimport LoginPage from './pages/LoginPage/LoginPage';\r\nimport Help from './pages/Help/Help';\r\nimport UploadPage from './pages/UploadPage/UploadPage';\r\nimport NoticePage from './pages/NoticePage/NoticePage';\r\nimport RakingPage from './pages/RakingPage/RakingPage';\r\nimport CommunityPage from './pages/CommunityPage/CommunityPage';\r\nimport DetailPage from './pages/DetailPage/DetailPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './Redux/userSlice';\r\nimport Mypage from './pages/Mypage/Mypage';\r\nimport RecyclingPage from './pages/RecyclingPage/RecyclingPage';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n     font-family: Noto Sans KR;\r\n    color: #000000;\r\n     //font-family: payboocLight,serif;\r\n     padding : 0 0;\r\n     margin: 0;\r\n\r\n     text-rendering: optimizelegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n`;\r\n\r\nfunction App(props) {\r\n    // const user = useSelector(selectUser);\r\n    const auth = useSelector((state) => state.auth);\r\n    const { user } = auth;\r\n    return (\r\n        <Router>\r\n            <GlobalStyle />\r\n            <div>\r\n                <Help />\r\n                <Navbar />\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/login\" component={LoginPage} />\r\n                    <Route exact path=\"/register\" component={RegisterPage} />\r\n                    <Route exact path=\"/upload\" component={UploadPage} />\r\n                    <Route exact path=\"/Notice\" component={NoticePage} />\r\n                    <Route exact path=\"/Ranking\" component={RakingPage} />\r\n                    <Route exact path=\"/Community\" component={CommunityPage} />\r\n                    <Route exact path=\"/post/:postId\" component={DetailPage} />\r\n                    <Route exact path=\"/recycling\" component={RecyclingPage} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/mypage/:userId\"\r\n                        render={\r\n                            () => (!user ? <Redirect to=\"/\" /> : <Mypage />)\r\n                            //    로그인 됬으면                           안됬으면\r\n                        }\r\n                    />\r\n                    {/*<Route component={NoMatch} />*/}\r\n                    <Route\r\n                        // path 를 따로 정의하지 않으면 모든 상황에 렌더링됨\r\n                        render={({ history }) => {\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\nimport {\n    configureStore,\n    createAction,\n    createReducer,\n    createSlice,\n} from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './userSlice';\n\nconst persistConfig = {\n    key: 'root',\n    // localStorage에 저장합니다.\n    storage,\n    // auth, board, studio 3개의 reducer 중에 auth reducer만 localstorage에 저장합니다.\n    whitelist: ['auth'],\n    // blacklist -> 그것만 제외합니다\n};\n\nconst rootReducer = combineReducers({\n    auth: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    // reducer: slice.reducer,\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store, { persistor } from './Redux/store';\nimport axios from 'axios';\n\nif (process.env.NODE_ENV === 'production') {\n    axios.defaults.baseURL = 'http://www.dorestory.com:8000/v1/';\n    axios.defaults.headers.post['Content-Type'] =\n        'application/json;charset=utf-8';\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}