{"version":3,"sources":["Alert/Alert.js","pages/RegisterPage/RegisterPage.js","images/DURE.png","Redux/userSlice.js","settings/url.js","settings/api.js","pages/LoginPage/LoginModal.js","components/Navbar/NavBar.js","images/brown_trash.jpg","images/tissue_trash.png","pages/MainPage/Banner/Banner.js","pages/MainPage/CharacterPage/Character.js","pages/MainPage/Worldview/Worldview.js","pages/MainPage/Medias/Medias.js","constants/URL.js","pages/MainPage/Menubar/Menubar.js","pages/MainPage/home.js","pages/LoginPage/LoginPage.js","SampleData/SampleData.js","pages/Help/Chatting/Comment.js","pages/Help/Chatting/Chatting.js","pages/Help/Help.js","pages/UploadPage/UploadPage.js","components/Pagination/PaginationComponent.js","pages/NoticePage/NoticePage.js","pages/RakingPage/RakingPage.js","Util/Util.js","pages/CommunityPage/CommunityTable.js","pages/CommunityPage/CommunityBig.js","pages/CommunityPage/CommunityPage.js","pages/DetailPage/DetailPage.js","pages/Mypage/Mypage.js","pages/RecyclingPage/RecycleBox/postBox.js","pages/RecyclingPage/RecycleBox/RecycleBox.js","pages/RecyclingPage/Quiz/AccordionContainer.js","pages/RecyclingPage/Quiz/Quiz.js","pages/RecyclingPage/RecyclingPage.js","pages/NoticeDetailPage/NoticeDetaiPage.js","App.js","Redux/store.js","index.js"],"names":["SuccessAlert","title","Swal","fire","icon","showConfirmButton","showCloseButton","timer","showClass","popup","hideClass","FailLoginAlert","footer","FailAlert","RegisterPage","props","formik","useFormik","enableReinitialize","initialValues","login_id","password","checkPassword","nickname","validationSchema","yup","shape","email","required","min","oneOf","max","onSubmit","values","setSubmitting","setErrors","axios","post","then","res","data","code","history","replace","msg","catch","err","response","console","log","handleChange","errors","handleSubmit","resetForm","useState","passwordHide","setPasswordHide","checkPasswordHide","setCheckPasswordHide","onClickChange","e","id","Container","LoginContainer","JoinFont","FormContainer","TextContainer","ShowBox","TextLabel","Textbox","Input","placeholder","type","value","onChange","style","border","length","SuccessIcons","className","FailIcons","ErrorFont","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","color","LockIcons","onClick","padding","ButtonContainer","styled","div","p","form","input","i","userSlice","createSlice","name","initialState","user","reducers","LOGIN","state","action","payload","LOGOUT","actions","BASE_URL","create","baseURL","withCredentials","LoginModal","useHistory","useSelector","auth","dispatch","useDispatch","setShow","handleClose","a","isSubmitting","dirty","LoginButton","Modal","onHide","centered","Header","closeButton","Body","LoginLabel","Form","method","disabled","TextBox","Label","ForgetContainer","SubmitBtn","SignContainer","SignFont","push","button","h1","label","span","NavLinkq","LinkS","NavBar","onChannelChange","channel","preventDefault","Navbar","collapseOnSelect","expand","bg","variant","Brand","Logo","src","DURE","alt","Toggle","aria-controls","Collapse","Nav","NavDropdown","to","smooth","duration","spy","exact","offset","Item","Link","href","img","CarouselBox","Carousel","IMG","Banner","backImage","trush1","sub","image","trush2","main","fade","map","array","index","Caption","width","height","Character","Worldview","Medias","SocialContainer","SocialBox","target","rel","background","Social","Menubar","NavLinks","Home","setHide","pageY","setPageY","documentRef","useRef","document","handleScroll","pageYOffset","window","useEffect","current","addEventListener","removeEventListener","HeaderWrap","LoginPage","Content","Span","ChattingSampe","content","Time","ChatContent","UserName","Comment","chat","moment","locale","format","SubmitIcon","InputShowBox","InputBox","ChatContainer","Icon","TitleContainer","HelpContainer","containerSize","Chatting","setContainerSize","chatContent","setChatContent","chats","onSubmitHandler","currentTarget","ToolTipbox","HelpBox","Help","isHelp","setIsHelp","isTooltipActive","setIsTooltipActive","onMouseEnter","onMouseLeave","LengthTitle","Title","UploadPage","EditorState","createEmpty","editor","setEditor","setTitle","maxLength","editorStyle","minHeight","borderWidth","borderStyle","borderColor","editorState","onEditorStateChange","toolbar","inline","inDropdown","list","textAlign","link","uploadCallback","file","URL","createObjectURL","Promise","resolve","reject","localization","draftToHtml","convertToRaw","getCurrentContent","params","statusText","PaginationComponent","totalPage","page","Pagination","count","display","justifyContent","HeadTitle","HeadDate","TitleRow","CreatedRow","CreatedRow1","TableRowContainer","TableContainer","TH","tr","th","TD","td","h3","NoticePage","noticePost","setNoticepost","setPage","setTotalPage","fetchNotice","get","results","parseInt","postId","created_at","substr","backgroundColor","margin","RakingPage","calculateChatDate","d","today","Date","diffM","Math","floor","getTime","diffH","diffD","TitleFont","TR","ImageIcon","HeadTitleTH","HeadUserTH","HeadSmallTH","Headtr","ContentTitle","ContentUser","ContentSmall","CommunityTable","posts","Table","hover","size","alignItems","review_count","hit_count","Post","PostImg","PostTitle","PostContent","PostInforBox","CommunityBig","InputGroup","Button","FormControl","Breadcrumb","active","WriteButton","SpinnerContainer","IconBox","Icons","Subtitle","InputGroups","SearchBtn","InputForm","CommunityPage","setPosts","isDisplay","setIsDisplay","search","setSearch","isLoading","setIsLoading","onChangeDisplay","Display","fetchPost","keyword","alert","Spinner","animation","Append","BottomContainer","CountReviewText","SubmitButton","ReviewSubmitBox","TextArea","textarea","AvartarContainer","ReviewContent","ReviewDate","ReviewUser","ReviewBox","ReviewinfoBox","ReviewContainer","TotalReview","TotalReviewCount","DetailPage","reviewText","setReviewText","setPost","reviews","setReviews","match","totalReview","setTotalReview","fetchReview","convertFromHTML","readOnly","review","backgroundImage","subtract","calendar","rows","Mypage","RightContainer","TYpography","Typography","ICON","Box","Image","PostBox","React","expanded","setExpanded","in","timeout","unmountOnExit","paragraph","TitleBox","BoxContainer","RecycleBox","fetchQuiz","recycles","setRecycles","newRecycleInfos","Object","assign","forEach","recycleInfo","category","hasOwnProperty","SolutionBox","RealityFont","SolutionFont","AccordionContainer","quiz","Accordion","borderBottom","AccordionSummary","expandIcon","question","answer","Quiz","quizs","setQuizs","FetchQuiz","RecyclingPage","NoticeDetaiPage","NoticeFont","NoticeContainer","CreateDate","GlobalStyle","createGlobalStyle","App","path","component","render","persistConfig","key","storage","whitelist","rootReducer","combineReducers","userReducer","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edb02018.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\nexport const SuccessAlert = (title) => {\n    Swal.fire({\n        // position: 'top-end',\n        icon: 'success',\n        title: title,\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 2500,\n        showClass: {\n            popup: 'animate__animated animate__fadeInDown',\n        },\n        hideClass: {\n            popup: 'animate__animated animate__fadeOutUp',\n        },\n    });\n};\nexport const FailLoginAlert = (title) => {\n    Swal.fire({\n        icon: 'error',\n        title: title,\n        footer: '<a href=\"register\">회원가입 하러가기</a>',\n    });\n};\nexport const FailAlert = (title) => {\n    Swal.fire({\n        icon: 'error',\n        title: title,\n    });\n};\n","import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport styled from 'styled-components';\nimport './button.css';\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport axios from 'axios';\nimport { FailAlert, FailLoginAlert, SuccessAlert } from '../../Alert/Alert';\nfunction RegisterPage(props) {\n    const formik = useFormik({\n        enableReinitialize: true,\n        initialValues: {\n            login_id: '',\n            password: '',\n            checkPassword: '',\n            nickname: '',\n        },\n        validationSchema: yup.object().shape({\n            login_id: yup\n                .string()\n                .email('존재하지 않는 형식입니다.')\n                .required('필수 항목입니다.'),\n            password: yup\n                .string()\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\n                .required('필수 항목입니다.'),\n            // checkPassword: yup.string().required('필수 항목입니다.'),\n            checkPassword: yup\n                .string()\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\n                .oneOf([yup.ref('password'), null], '비밀번호와 같지않습니다.')\n                .required('필수 항목입니다.'),\n            // phoneNumber: yup\n            //     .string()\n            //     .max(11, '최대 11자리입니다 ')\n            //     .required('- 없이 숫자만 입력해주세요.'),\n            nickname: yup\n                .string()\n                .min(2, '최소 2자리 이상 입니다 ')\n                .max(6, '최대 6자리 이하 입니다')\n                .required('필수 항목입니다.'),\n        }),\n        onSubmit: (values, { setSubmitting, setErrors }) => {\n            // if (\n            //     values.password.length === 0 ||\n            //     values.password.length === 0 ||\n            //     values.checkPassword.length === 0 ||\n            //     values.nickname.length === 0\n            // ) {\n            //     FailAlert('모든항목 입력');\n            //     return;\n            // }\n            axios\n                .post('users/sign-up/', values)\n                .then((res) => {\n                    if (res.data.code !== 'OK') {\n                        FailAlert(res.data.msg);\n                        // alert(res.data.msg);\n                        return;\n                    }\n                    SuccessAlert('회원가입 되었습니다');\n                    // alert('회원가입 되었습니다.');\n                    props.history.replace('/');\n                })\n                .catch((err) => {\n                    if (err.response.data.msg) {\n                        FailAlert(err.response.data.msg);\n                        // alert(err.response.data.msg);\n                    } else {\n                        console.log(err);\n                    }\n                });\n        },\n    });\n\n    const {\n        values,\n        handleChange,\n        errors,\n        // setFieldTouched,\n        // touched,\n        // isValid,\n        // isSubmitting,\n        handleSubmit,\n        // setFieldValue,\n        resetForm,\n        // setErrors,\n    } = formik;\n    const [passwordHide, setPasswordHide] = useState(true);\n    const [checkPasswordHide, setCheckPasswordHide] = useState(true);\n    const onClickChange = (e, id) => {\n        // e.preventDefault();\n        if (id === 'password') {\n            setPasswordHide(!passwordHide);\n        } else if (id === 'checkPassword')\n            setCheckPasswordHide(!checkPasswordHide);\n    };\n    return (\n        <Container>\n            <LoginContainer>\n                <JoinFont>회원가입</JoinFont>\n\n                <FormContainer onSubmit={handleSubmit}>\n                    {/*아이디*/}\n                    <TextContainer>\n                        <ShowBox>\n                            <TextLabel>아이디</TextLabel>\n                        </ShowBox>\n                        <Textbox>\n                            <Input\n                                placeholder=\"이메일\"\n                                type=\"email\"\n                                value={values.login_id}\n                                onChange={handleChange('login_id')}\n                                style={{\n                                    border:\n                                        values.login_id.length === 0\n                                            ? 'border: 1px solid #adaabf'\n                                            : !errors.login_id\n                                            ? '1px solid #00d8be'\n                                            : '1px solid #ff5631',\n                                }}\n                            />\n                            {values.login_id && !errors.login_id && (\n                                <SuccessIcons className=\"far fa-check-circle\" />\n                            )}\n                            {values.login_id && errors.login_id && (\n                                <FailIcons className=\"far fa-times-circle\" />\n                            )}\n                            {errors.login_id && (\n                                <ErrorFont>{errors.login_id}</ErrorFont>\n                            )}\n                        </Textbox>\n                    </TextContainer>\n                    {/*비밀번호*/}\n                    <TextContainer>\n                        <ShowBox>\n                            <TextLabel>비밀번호</TextLabel>\n                            {/*<HideLabel*/}\n                            {/*    onClick={(e) => {*/}\n                            {/*        onClickChange(e, 'password');*/}\n                            {/*    }}*/}\n                            {/*>*/}\n                            {/*    {passwordHide ? 'Hide' : 'Show'}*/}\n                            {/*</HideLabel>*/}\n                        </ShowBox>\n                        <Textbox>\n                            <OverlayTrigger\n                                placement=\"top\"\n                                delay={{ show: 250, hide: 400 }}\n                                overlay={\n                                    <Tooltip style={{ color: 'red' }}>\n                                        {passwordHide\n                                            ? '비밀번호 보여주기'\n                                            : '비밀번호 숨기기'}\n                                    </Tooltip>\n                                }\n                            >\n                                <LockIcons\n                                    onClick={(e) => {\n                                        onClickChange(e, 'password');\n                                    }}\n                                    className={\n                                        passwordHide\n                                            ? 'fas fa-lock'\n                                            : 'fas fa-lock-open'\n                                    }\n                                />\n                            </OverlayTrigger>\n\n                            {/*<LockIcons className=\"fas fa-lock\" />*/}\n                            <Input\n                                placeholder=\"비밀번호\"\n                                type={passwordHide ? 'password' : 'text'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                style={{\n                                    padding: '12px 3rem',\n                                    border: !values.password\n                                        ? 'border: 1px solid #adaabf'\n                                        : !errors.password\n                                        ? '1px solid #00d8be'\n                                        : '1px solid #ff5631',\n                                }}\n                            />\n                            {values.password && !errors.password && (\n                                <SuccessIcons className=\"far fa-check-circle\" />\n                            )}\n                            {values.password && errors.password && (\n                                <FailIcons className=\"far fa-times-circle\" />\n                            )}\n                            {errors.password && (\n                                <ErrorFont>{errors.password}</ErrorFont>\n                            )}\n                        </Textbox>\n                    </TextContainer>\n                    {/*비밀번호 체크*/}\n\n                    <TextContainer>\n                        <ShowBox>\n                            <TextLabel>비밀번호 확인</TextLabel>\n                        </ShowBox>\n                        <Textbox>\n                            <OverlayTrigger\n                                placement=\"top\"\n                                delay={{ show: 250, hide: 400 }}\n                                overlay={\n                                    <Tooltip style={{ color: 'red' }}>\n                                        {passwordHide\n                                            ? '비밀번호 확인 보여주기'\n                                            : '비밀번호 확인 숨기기'}\n                                    </Tooltip>\n                                }\n                            >\n                                <LockIcons\n                                    onClick={(e) => {\n                                        onClickChange(e, 'checkPassword');\n                                    }}\n                                    className={\n                                        checkPasswordHide\n                                            ? 'fas fa-lock'\n                                            : 'fas fa-lock-open'\n                                    }\n                                />\n                            </OverlayTrigger>\n\n                            <Input\n                                placeholder=\"비밀번호 확인\"\n                                type={checkPasswordHide ? 'password' : 'text'}\n                                value={values.checkPassword}\n                                onChange={handleChange('checkPassword')}\n                                style={{\n                                    padding: '12px 3rem',\n                                    border: !values.checkPassword\n                                        ? 'border: 1px solid #adaabf'\n                                        : !errors.checkPassword\n                                        ? '1px solid #00d8be'\n                                        : '1px solid #ff5631',\n                                }}\n                            />\n                            {values.checkPassword && !errors.checkPassword && (\n                                <SuccessIcons className=\"far fa-check-circle\" />\n                            )}\n                            {values.checkPassword && errors.checkPassword && (\n                                <FailIcons className=\"far fa-times-circle\" />\n                            )}\n                            {errors.checkPassword && (\n                                <ErrorFont>{errors.checkPassword}</ErrorFont>\n                            )}\n                        </Textbox>\n                        {/*{errors.checkPassword && (*/}\n                        {/*    <ErrorFont>{errors.checkPassword}</ErrorFont>*/}\n                        {/*)}*/}\n                    </TextContainer>\n                    {/*닉네임*/}\n                    <TextContainer>\n                        <ShowBox>\n                            <TextLabel>닉네임</TextLabel>\n                        </ShowBox>\n                        <Textbox>\n                            <Input\n                                placeholder=\"닉네임\"\n                                type=\"text \"\n                                value={values.nickname}\n                                onChange={handleChange('nickname')}\n                                style={{\n                                    border: !values.nickname\n                                        ? 'border: 1px solid #adaabf'\n                                        : !errors.nickname\n                                        ? '1px solid #00d8be'\n                                        : '1px solid #ff5631',\n                                }}\n                            />\n                            {values.nickname && !errors.nickname && (\n                                <SuccessIcons className=\"far fa-check-circle\" />\n                            )}\n                            {values.nickname && errors.nickname && (\n                                <FailIcons className=\"far fa-times-circle\" />\n                            )}\n                            {errors.nickname && (\n                                <ErrorFont>{errors.nickname}</ErrorFont>\n                            )}\n                        </Textbox>\n                    </TextContainer>\n\n                    {/*버튼*/}\n\n                    {/*<button type=\"submit\" onClick={handleSubmit}>*/}\n                    {/*    Login now*/}\n                    {/*</button>*/}\n                    <ButtonContainer>\n                        <div className=\"wrap\">\n                            <button\n                                className=\"button\"\n                                type=\"submit\"\n                                onClick={handleSubmit}\n                            >\n                                회원가입 하귀\n                            </button>\n                        </div>\n                        <div className=\"wrap\">\n                            <button\n                                className=\"button\"\n                                type=\"reset\"\n                                onClick={resetForm}\n                            >\n                                다시입력\n                            </button>\n                        </div>\n                    </ButtonContainer>\n                    {/*{errors.password && (*/}\n                    {/*    <ErrorFont>{errors.password}</ErrorFont>*/}\n                    {/*)}*/}\n                    {/*{errors.email && <ErrorFont>{errors.email}</ErrorFont>}*/}\n                    {/*{errors.checkPassword && (*/}\n                    {/*    <ErrorFont>{errors.checkPassword}</ErrorFont>*/}\n                    {/*)}*/}\n                    {/*{errors.nickname && (*/}\n                    {/*    <ErrorFont>{errors.nickname}</ErrorFont>*/}\n                    {/*)}*/}\n                </FormContainer>\n            </LoginContainer>\n        </Container>\n    );\n}\n\nexport default RegisterPage;\n\nconst Container = styled.div``;\n\nconst JoinFont = styled.p`\n    font-size: 40px;\n    padding-top: 60px;\n    border-bottom: 1px solid #cccccc;\n    text-align: center;\n    margin-bottom: 4rem;\n    line-height: 5rem;\n`;\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst ErrorFont = styled.p`\n    color: #f2685b;\n`;\nconst FormContainer = styled.form`\n    width: 100%;\n`;\nconst TextContainer = styled.div`\n    width: 530px;\n    text-align: left;\n    margin: 1rem auto auto;\n    height: 5.4rem;\n    display: flex;\n    justify-content: space-between;\n`;\nconst Textbox = styled.div`\n    display: flex;\n    flex-direction: column;\n    //align-items: center;\n    position: relative;\n    width: 400px;\n`;\nconst Input = styled.input`\n    background-color: #eaf0fe;\n    width: 100%;\n    height: 52px;\n    border: 1px solid #adaabf;\n    box-sizing: border-box;\n    box-shadow: 0px 1px 2px rgba(50, 43, 95, 0.08);\n    border-radius: 4px;\n    padding: 12px 1.5rem;\n    &:focus {\n        outline: none;\n        border: 1px solid blue;\n        //border: 1px solid #00d8be;\n    }\n`;\n\nconst LoginContainer = styled.div`\n    margin: auto;\n    max-width: 1250px;\n    text-align: center;\n`;\nconst TextLabel = styled.p`\n    margin-bottom: 3px;\n    font-weight: bold;\n    font-size: 1rem;\n`;\nconst HideLabel = styled(TextLabel)`\n    cursor: pointer;\n`;\nconst ShowBox = styled.div`\n    display: flex;\n    margin-top: 1rem;\n    justify-content: space-between;\n`;\nconst SuccessIcons = styled.i`\n    position: absolute;\n    right: 12px;\n    top: 16px;\n    color: #00d8be;\n`;\nconst FailIcons = styled.i`\n    position: absolute;\n    top: 16px;\n    right: 12px;\n    color: #ff5631;\n`;\nconst LockIcons = styled.i`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n    color: #adaabf;\n    cursor: pointer;\n`;\n//<i class=\"fas fa-lock-open\"></i>\n","export default __webpack_public_path__ + \"static/media/DURE.ac8f9a32.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        user: {},\n    },\n    reducers: {\n        LOGIN: (state, action) => {\n            state.user = action.payload;\n        },\n        LOGOUT: (state) => {\n            state.user = null;\n        },\n    },\n});\n\nexport const selectUser = (state) => state.user;\n\nexport const { LOGIN, LOGOUT } = userSlice.actions;\nexport default userSlice.reducer;\n","// let url = 'http://localhost';\n// url = 'http://3.35.167.116';\n// url = 'http://www.dorestory.com';\n//\n// if (process.env.NODE_ENV === 'production') {\n//     url = 'http://www.dorestory.com:8000/v1/';\n// }\n//\n// export const BASE_URL = url + ':8000/v1/';\n// // http://3.35.167.116:8000/v1/users/sign-up/\n\nlet url = 'http://localhost';\nurl = 'http://54.180.217.191';\n// url = 'http://www.dorestory.com';\n\nif (process.env.NODE_ENV === 'production') {\n    // url = 'http://www.dorestory.com';\n    url = 'http://54.180.217.191';\n}\nexport const BASE_URL = url + ':8000/v1';\n","import axios from 'axios';\nimport { BASE_URL } from './url';\n\nconst api = axios.create({\n    baseURL: BASE_URL,\n    withCredentials: true,\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-bootstrap/Modal';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\n// import { selectUser } from '../../Redux/store';\nimport { LOGIN, LOGOUT, selectUser } from '../../Redux/userSlice';\n// import { LOGIN, LOGOUT, selectUser } from '../../Redux/store';\nimport { FailLoginAlert, SuccessAlert } from '../../Alert/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../../settings/api';\nimport { useHistory } from 'react-router-dom';\n\nfunction LoginModal(props) {\n    const history = useHistory();\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    const dispatch = useDispatch();\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n    };\n    const handleShow = () => {\n        resetForm();\n        setShow(true);\n    };\n    const onHandleError = () => {\n        if (values.password.length === 0 || values.login_id.length === 0) {\n        } else if (errors.login_id) {\n            FailLoginAlert(errors.login_id);\n        } else if (values.password.length < 8) {\n            FailLoginAlert(errors.password);\n        }\n    };\n    const formik = useFormik({\n        enableReinitialize: true,\n        initialValues: {\n            login_id: '',\n            password: '',\n        },\n        validationSchema: yup.object().shape({\n            login_id: yup\n                .string()\n                .email('존재하지 않는 형식입니다.')\n                .required('필수 항목입니다.'),\n            password: yup\n                .string()\n                .min(8, '비밀번호는 최소 8자리 이상입니다.')\n                .required('필수 항목입니다.'),\n        }),\n        onSubmit: async (values, { setSubmitting, setErrors }) => {\n            // console.log('axios url', axios.defaults.baseURL);\n\n            axios\n                .post('/users/login/', values)\n                .then((res) => {\n                    handleClose();\n                    SuccessAlert('로그인 성공');\n                    // console.log('성공', res);\n                    // alert('로그인 성공');\n                    dispatch(LOGIN(res.data));\n                })\n                .catch((err) => {\n                    console.log(err, 'catch err');\n                    console.log(err.response, 'catch err');\n                    if (err.response?.data.msg) {\n                        FailLoginAlert(err.response.data.msg);\n                        // alert(err.response.data.msg);\n                    }\n                });\n        },\n    });\n    const handleLogout = (e) => {\n        dispatch(LOGOUT());\n    };\n    const {\n        values,\n        handleChange,\n        errors,\n        // setFieldTouched,\n        // touched,\n        // isValid,\n        // isSubmitting,\n        handleSubmit,\n        // setFieldValue,\n        resetForm,\n        // setErrors,\n        isSubmitting,\n        dirty,\n    } = formik;\n\n    return (\n        <>\n            {!user ? (\n                <LoginButton onClick={handleShow}>로그인</LoginButton>\n            ) : (\n                <LoginButton onClick={handleLogout}>로그아웃</LoginButton>\n            )}\n            <Modal\n                show={show}\n                onHide={() => {\n                    handleClose();\n                    resetForm();\n                }}\n                centered\n            >\n                <Modal.Header closeButton />\n                <Modal.Body>\n                    <LoginLabel>로그인</LoginLabel>\n                    <Form\n                        method=\"post\"\n                        onSubmit={handleSubmit}\n                        disabled={!formik.dirty}\n                    >\n                        <TextBox>\n                            <Input\n                                type=\"text\"\n                                required\n                                value={values.login_id}\n                                onChange={handleChange('login_id')}\n                            />\n                            <Label>Username</Label>\n                        </TextBox>\n                        <TextBox>\n                            <Input\n                                type=\"password\"\n                                required\n                                value={values.password}\n                                onChange={handleChange('password')}\n                            />\n                            <Label>Password</Label>\n                        </TextBox>\n                        <ForgetContainer className=\"pass\">\n                            Forgot Password?\n                        </ForgetContainer>\n                        <SubmitBtn\n                            type=\"submit\"\n                            value=\"login\"\n                            onClick={(e) => {\n                                onHandleError();\n                            }}\n                        />\n                        <SignContainer>\n                            Not a member?\n                            <SignFont\n                                onClick={() => {\n                                    setShow(false);\n                                    history.push('/register');\n                                }}\n                            >\n                                Signup\n                            </SignFont>\n                        </SignContainer>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default LoginModal;\nconst LoginButton = styled.button`\n    width: 120px;\n    height: 38px;\n    border-radius: 16px;\n`;\nconst LoginLabel = styled.h1`\n    text-align: center;\n    padding: 20px 0 20px 0;\n    border-bottom: 1px solid silver;\n`;\nconst Form = styled.form`\n    padding: 0 40px;\n    box-sizing: border-box;\n`;\nconst TextBox = styled.div`\n    position: relative;\n    border-bottom: 2px solid #adadad;\n    margin: 30px 0;\n`;\nconst Input = styled.input`\n    width: 100%;\n    padding: 0 5px;\n    height: 40px;\n    font-size: 1rem;\n    border: none;\n    background: none;\n    outline: none;\n    &:focus ~ Label {\n        top: -5px;\n        color: #2691d9;\n    }\n    &:valid ~ Label {\n        top: -5px;\n        color: #2691d9;\n    }\n    &:focus ~ Span {\n        &:before {\n            width: 100%;\n        }\n    }\n    &:valid ~ Span {\n        &:before {\n            width: 100%;\n        }\n    }\n`;\nconst Label = styled.label`\n    position: absolute;\n    top: 50%;\n    left: 5px;\n    color: #adadad;\n    transform: translateY(-50%);\n    font-size: 1rem;\n    pointer-events: none;\n    transition: 0.5s;\n`;\nconst ForgetContainer = styled.div`\n    margin: -5px 0 20px 5px;\n    color: #a6a6a6;\n    cursor: pointer;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst SubmitBtn = styled.input`\n    width: 100%;\n    height: 50px;\n    border: 1px solid;\n    background: #2691d9;\n    border-radius: 25px;\n    font-size: 18px;\n    color: #e9f4fb;\n    font-weight: 700;\n    cursor: pointer;\n    outline: none;\n    &:hover {\n        border-color: #2691d9;\n        transition: 0.5s;\n    }\n`;\n\nconst SignContainer = styled.div`\n    margin: 30px 0;\n    text-align: center;\n    font-size: 1rem;\n    color: #666666;\n`;\nconst SignFont = styled.span`\n    cursor: pointer;\n    color: #2691d9;\n    text-decoration: none;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { animateScroll as scroll, Link as LinkS } from 'react-scroll';\nimport { Link, useHistory } from 'react-router-dom';\nimport DURE from '../../images/DURE.png';\nimport { Nav, NavItem, NavDropdown, MenuItem, Navbar } from 'react-bootstrap';\nimport LoginModal from '../../pages/LoginPage/LoginModal';\nimport './css.css';\nimport { useSelector } from 'react-redux';\n// import { selectUser } from '../../Redux/store';\nimport { selectUser } from '../../Redux/userSlice';\nfunction NavBar(props) {\n    // const user = useSelector(selectUser);\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    //테스트\n    const history = useHistory();\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    };\n    const onChannelChange = (e, channel) => {\n        e.preventDefault();\n        history.push(`/${channel}`);\n    };\n    return (\n        // <Container>\n        //     <LogoContainer>\n        //         <Logo\n        //             src={DURE}\n        //             alt=\"Logo\"\n        //             onClick={() => {\n        //                 history.push('/');\n        //             }}\n        //         />\n        //         {/*<Navv>*/}\n        //         <NavDropdown title=\"게임소개\" id=\"DropBar\">\n        //             <NavLinkq\n        //                 to=\"banner\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>게임소개</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"character\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>캐릭터</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"worldview\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>세계관</NavDropdown.Item>\n        //             </NavLinkq>\n        //             <NavLinkq\n        //                 to=\"media\"\n        //                 smooth={true}\n        //                 duration={500}\n        //                 spy={true}\n        //                 exact=\"true\"\n        //                 offset={-80}\n        //             >\n        //                 <NavDropdown.Item>미디어</NavDropdown.Item>\n        //             </NavLinkq>\n        //             {/**/}\n        //         </NavDropdown>\n        //\n        //         <NavLinks to=\"/login\">공지사항</NavLinks>\n        //         <NavLinks to=\"/login\">랭킹</NavLinks>\n        //         <NavLinks to=\"/upload\">커뮤니티</NavLinks>\n        //         {/*</Navv>*/}\n        //         <LoginModal />\n        //     </LogoContainer>\n        // </Container>\n        <Container>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand>\n                    <Logo\n                        src={DURE}\n                        alt=\"Logo\"\n                        onClick={() => {\n                            history.push('/');\n                        }}\n                    />\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"게임소개\">\n                            <NavLinkq\n                                to=\"banner\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>게임소개</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"character\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>캐릭터</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"worldview\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>세계관</NavDropdown.Item>\n                            </NavLinkq>\n                            <NavLinkq\n                                to=\"media\"\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact=\"true\"\n                                offset={-80}\n                            >\n                                <NavDropdown.Item>미디어</NavDropdown.Item>\n                            </NavLinkq>\n                            {/**/}\n                        </NavDropdown>\n\n                        <Nav.Link\n                            href={'/Notice'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Notice');\n                            }}\n                        >\n                            공지사항\n                        </Nav.Link>\n                        <Nav.Link\n                            href={'/Ranking'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Ranking');\n                            }}\n                        >\n                            랭킹\n                        </Nav.Link>\n                        <Nav.Link\n                            href={'/Community'}\n                            onClick={(e) => {\n                                onChannelChange(e, 'Community');\n                            }}\n                        >\n                            커뮤니티\n                        </Nav.Link>\n                        {/*테스트*/}\n                        {user && (\n                            <Nav.Link\n                                href={'/mypage'}\n                                onClick={(e) => {\n                                    onChannelChange(e, `mypage/${user.id}`);\n                                }}\n                            >\n                                마이페이지\n                            </Nav.Link>\n                        )}\n                        {/*테스트*/}\n                    </Nav>\n                    <Nav>\n                        {/*<Nav.Link href=\"#deets\">More deets</Nav.Link>*/}\n                        {/*<Nav.Link eventKey={2} href=\"#memes\">*/}\n                        {/*    Dank memes*/}\n                        {/*</Nav.Link>*/}\n\n                        <LoginModal />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </Container>\n    );\n}\n\nconst NavLinkq = styled(LinkS)`\n    text-decoration: none;\n    color: #000;\n    font-size: 1.2rem;\n    font-weight: 400;\n    cursor: pointer;\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n    &.active {\n        border-bottom: 3px solid #01bf71;\n        transform: scale(1.04);\n        font-weight: 700;\n    }\n`;\nexport default NavBar;\nconst Drop = styled(NavDropdown)`\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n`;\nconst Container = styled.div`\n    width: 100%;\n    position: sticky;\n    z-index: 10;\n    top: 0;\n`;\nconst LogoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin: auto;\n    max-width: 1250px;\n    justify-content: space-between;\n    height: 5.8rem;\n    padding: 0.5rem 0;\n`;\nconst Navv = styled.div`\n    align-items: center;\n    height: 5.8rem;\n    padding: 0.5rem 0;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 75rem;\n    margin: auto;\n    background: red;\n`;\nconst Logo = styled.img`\n    width: 106px;\n    height: 55px;\n    cursor: pointer;\n`;\nconst NavLinks = styled(Link)`\n    text-decoration: none;\n    color: #000;\n    font-size: 1.2rem;\n    font-weight: 400;\n    cursor: pointer;\n    &:hover {\n        color: #ffe81e;\n        transform: scale(1.04);\n    }\n    &.active {\n        border-bottom: 3px solid #01bf71;\n        transform: scale(1.04);\n        font-weight: 700;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/brown_trash.d19c6d88.jpg\";","export default __webpack_public_path__ + \"static/media/tissue_trash.80d5723d.png\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-carousel/dist/react-bootstrap-carousel.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport trush1 from '../../../images/brown_trash.jpg';\nimport trush2 from '../../../images/tissue_trash.png';\nconst Banner = () => {\n    const [main, setMain] = useState([\n        {\n            backImage: trush1,\n            title: '흰색 돼지',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image:\n                'https://i.pinimg.com/564x/27/de/1f/27de1fbde83fb1441b19c2ec4743a76d.jpg',\n        },\n        {\n            backImage: trush2,\n            title: '엘사 딱가리',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image:\n                'https://i.pinimg.com/564x/27/de/1f/27de1fbde83fb1441b19c2ec4743a76d.jpg',\n        },\n        {\n            backImage:\n                'https://images.unsplash.com/photo-1537151625747-768eb6cf92b2?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZG9nfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n            title: '댕댕이',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image: trush1,\n        },\n        {\n            backImage: '',\n            title: '????????????',\n            sub: '  Nulla vitae elit libero, a pharetra augue mollis interdum',\n            image: trush2,\n        },\n    ]);\n\n    return (\n        <Container id=\"banner\">\n            <Carousel fade>\n                {main.map((array, index) => (\n                    <CarouselBox key={index}>\n                        {array.backImage && (\n                            <IMG\n                                className=\"d-block w-100\"\n                                src={array.backImage}\n                                alt=\"First slide\"\n                            />\n                        )}\n                        <Carousel.Caption>\n                            <img\n                                src={array.image}\n                                style={{ width: 300, height: 300 }}\n                            />\n                            <h3>{array.title}</h3>\n                            <p>{array.sub}</p>\n                        </Carousel.Caption>\n                    </CarouselBox>\n                ))}\n            </Carousel>\n        </Container>\n    );\n};\nconst CarouselBox = styled(Carousel.Item)`\n    height: 500px;\n    width: 100%;\n    background: orange;\n`;\nconst Container = styled.div``;\n\nconst IMG = styled.img`\n    width: 100%;\n    height: 500px;\n`;\nexport default Banner;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Character(props) {\r\n    return <Container id=\"character\">{/*<Content></Content>*/}</Container>;\r\n}\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    height: 1200px;\r\n    background: blue;\r\n`;\r\nexport default Character;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Worldview(props) {\r\n    return <Container id=\"worldview\">{/*<Content></Content>*/}</Container>;\r\n}\r\nconst Container = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    height: 1200px;\r\n    background: green;\r\n`;\r\nexport default Worldview;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n    INSTAGRAM_URL,\n    NAVERBLOG_URL,\n    YOUTUBE_URL,\n    FACEBOOK_URL,\n} from '../../../constants/URL';\n\nfunction Medias(props) {\n    return (\n        <Container id=\"media\">\n            <SocialContainer>\n                <SocialBox\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={YOUTUBE_URL}\n                    style={{ background: 'rgb(199, 37, 45)' }}\n                >\n                    <Social className=\"fab fa-youtube\" />\n                </SocialBox>\n                <SocialBox\n                    style={{\n                        background:\n                            'linear-gradient(180deg, #ea9e38 0, #ef9337 8.33%, #f48838 16.67%, #f77a3a 25%, #f96b3d 33.33%, #fa5a41 41.67%, #f94646 50%, #f72c4c 58.33%, #f40054 66.67%, #f0005e 75%, #eb0069 83.33%, #e40075 91.67%, #db0082 100%)',\n                    }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={INSTAGRAM_URL}\n                >\n                    <Social className=\"fab fa-instagram\" />\n                </SocialBox>\n                <SocialBox\n                    style={{ background: 'rgb(60, 92, 153)' }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={FACEBOOK_URL}\n                >\n                    <Social className=\"fab fa-facebook-f\" />\n                </SocialBox>\n                <SocialBox\n                    style={{ background: 'rgb(58, 174, 56)' }}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    href={NAVERBLOG_URL}\n                >\n                    <Social className=\"fab fa-blogger-b\" />\n                </SocialBox>\n            </SocialContainer>\n        </Container>\n    );\n}\n\nexport default Medias;\nconst Container = styled.div`\n    margin: auto;\n    width: 100%;\n    background: rgb(25, 28, 36);\n    padding-top: 2.75rem;\n    padding-bottom: 4.375rem;\n`;\nconst SocialBox = styled.a`\n    font-size: 3rem;\n    width: 80px;\n    height: 80px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    cursor: pointer;\n    border-radius: 50%;\n    text-decoration: none;\n    &: hover {\n        opacity: 0.8;\n    }\n`;\nconst SocialContainer = styled.div`\n    max-width: 55rem;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n\n    margin: auto;\n`;\nconst Social = styled.i`\n    color: white;\n`;\n","export const INSTAGRAM_URL = 'https://www.instagram.com/official_do_re/';\nexport const FACEBOOK_URL =\n    'https://www.facebook.com/%EB%91%90%EB%A6%AC-DoRE-103139068522900';\nexport const YOUTUBE_URL =\n    'https://www.youtube.com/channel/UCXaHtJS7sK3QpOfNHdPk2jQ';\nexport const NAVERBLOG_URL = 'https://blog.naver.com/qorehddn123';\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link as LinkS } from 'react-scroll';\r\nfunction Menubar(props) {\r\n    return (\r\n        <Container>\r\n            <Nav>\r\n                <NavLinks\r\n                    to=\"banner\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    게임소개\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"character\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    캐릭터\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"worldview\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    세계관\r\n                </NavLinks>\r\n                <NavLinks\r\n                    to=\"media\"\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exact=\"true\"\r\n                    offset={-80}\r\n                >\r\n                    미디어\r\n                </NavLinks>\r\n                {/*<NavLinks*/}\r\n                {/*    to=\"worldview\"*/}\r\n                {/*    smooth={true}*/}\r\n                {/*    duration={500}*/}\r\n                {/*    spy={true}*/}\r\n                {/*    exact=\"true\"*/}\r\n                {/*    offset={-80}*/}\r\n                {/*>*/}\r\n                {/*    쿠폰입력*/}\r\n                {/*</NavLinks>*/}\r\n            </Nav>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Menubar;\r\nconst Container = styled.div`\r\n    height: 80px;\r\n    width: 100%;\r\n    background: #fff;\r\n    display: flex;\r\n    position: sticky;\r\n    //border-top: 10px solid red;\r\n    box-shadow: 0 2px 15px 0 rgb(0 0 0 / 70%);\r\n`;\r\n\r\nconst Nav = styled.div`\r\n    align-items: center;\r\n    height: 100%;\r\n    padding: 0.5rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    max-width: 75rem;\r\n    margin: auto;\r\n`;\r\n\r\nconst NavLinks = styled(LinkS)`\r\n    text-decoration: none;\r\n    color: #000;\r\n    font-size: 1.2rem;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ffe81e;\r\n        transform: scale(1.04);\r\n    }\r\n    &.active {\r\n        border-bottom: 3px solid #01bf71;\r\n        transform: scale(1.04);\r\n        font-weight: 700;\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Banner from './Banner/Banner';\r\nimport Character from './CharacterPage/Character';\r\nimport Worldview from './Worldview/Worldview';\r\nimport Medias from './Medias/Medias';\r\nimport Menubar from './Menubar/Menubar';\r\nimport styled from 'styled-components';\r\nfunction Home(props) {\r\n    const [hide, setHide] = useState(false);\r\n    const [pageY, setPageY] = useState(0);\r\n    const documentRef = useRef(document);\r\n\r\n    const handleScroll = () => {\r\n        const { pageYOffset } = window;\r\n        const deltaY = pageYOffset - pageY;\r\n        const hide = pageYOffset !== 0 && deltaY >= 0;\r\n        setHide(hide);\r\n        setPageY(pageYOffset);\r\n    };\r\n\r\n    useEffect(() => {\r\n        documentRef.current.addEventListener('scroll', handleScroll);\r\n        return () =>\r\n            documentRef.current.removeEventListener('scroll', handleScroll);\r\n    }, [pageY]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrap className={hide && 'hide'}>\r\n                <Menubar />\r\n            </HeaderWrap>\r\n\r\n            {/*<Menubar />*/}\r\n            <Banner />\r\n            <Character />\r\n            <Worldview />\r\n            <Medias />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst HeaderArea = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n    //position: fixed;\r\n    //top: 80px;\r\n    //left: 0;\r\n    position: fixed;\r\n    z-index: 9;\r\n    width: 100%;\r\n    height: 80px;\r\n    transition: 0.8s ease;\r\n    transform: translateY(-80px);\r\n    margin-top: -100px;\r\n    &.hide {\r\n        transform: translateY(0px);\r\n        margin-top: 0px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RegisterPage from '../RegisterPage/RegisterPage';\r\n\r\nfunction LoginPage(props) {\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <LoginLabel>Login</LoginLabel>\r\n                <Form method=\"post\">\r\n                    <TextBox>\r\n                        <Input type=\"text\" required />\r\n                        <Span></Span>\r\n                        <Label>Username</Label>\r\n                    </TextBox>\r\n                    <TextBox>\r\n                        <Input type=\"password\" required />\r\n                        <Span></Span>\r\n                        <Label>Password</Label>\r\n                    </TextBox>\r\n                    <ForgetContainer className=\"pass\">\r\n                        Forgot Password?\r\n                    </ForgetContainer>\r\n                    <SubmitBtn type=\"submit\" value=\"login\" />\r\n                    <SignContainer>\r\n                        Not a member?\r\n                        <SignFont href=\"register\">Signup</SignFont>\r\n                    </SignContainer>\r\n                </Form>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    position: absolute;\r\n    background: linear-gradient(120deg, #2980b9, #8e44ad);\r\n`;\r\nconst Content = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 400px;\r\n    background: white;\r\n    border-radius: 10px;\r\n`;\r\nconst LoginLabel = styled.h1`\r\n    text-align: center;\r\n    padding: 20px 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n`;\r\nconst Form = styled.form`\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n`;\r\nconst TextBox = styled.div`\r\n    position: relative;\r\n    border-bottom: 2px solid #adadad;\r\n    margin: 30px 0;\r\n`;\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    padding: 0 5px;\r\n    height: 40px;\r\n    font-size: 1rem;\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    &:focus ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:valid ~ Label {\r\n        top: -5px;\r\n        color: #2691d9;\r\n    }\r\n    &:focus ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n    &:valid ~ Span {\r\n        &:before {\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\nconst Label = styled.label`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5px;\r\n    color: #adadad;\r\n    transform: translateY(-50%);\r\n    font-size: 1rem;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n`;\r\nconst Span = styled.span`\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background: #2691d9;\r\n        transition: 0.5s;\r\n    }\r\n`;\r\nconst ForgetContainer = styled.div`\r\n    margin: -5px 0 20px 5px;\r\n    color: #a6a6a6;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\nconst SubmitBtn = styled.input`\r\n    width: 100%;\r\n    height: 50px;\r\n    border: 1px solid;\r\n    background: #2691d9;\r\n    border-radius: 25px;\r\n    font-size: 18px;\r\n    color: #e9f4fb;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        border-color: #2691d9;\r\n        transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst SignContainer = styled.div`\r\n    margin: 30px 0;\r\n    text-align: center;\r\n    font-size: 1rem;\r\n    color: #666666;\r\n`;\r\nconst SignFont = styled.a`\r\n    color: #2691d9;\r\n    text-decoration: none;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","export const SampleData = [\n    {\n        user: '라푼젤 ',\n        title: '음식물',\n        content:\n            '분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다를 거두어 가는 것\"으로 정의하고 있다.',\n        img:\n            'https://i.pinimg.com/564x/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg',\n    },\n    {\n        user: '라푼젤 ',\n        title: '음식물',\n        content:\n            '분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다를 거두어 가는 것\"으로 정의하고 있다.',\n        img:\n            'https://i.pinimg.com/564x/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg',\n    },\n    {\n        user: '에리얼',\n        title: '플라수튁',\n        content:\n            '분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다.',\n        img:\n            'https://i.pinimg.com/564x/2a/f6/d7/2af6d74b0ba62616bf1a3a2926b952f6.jpg',\n    },\n    {\n        user: '에리얼',\n        title: '플라수튁',\n        content:\n            '분리수거는 폐기물의 중간 처리 및 최종 처분을 쉽게 하기 위해 그 재질마다 폐기물을 분류하고 그것을 수집하는 것을 말한다. 《표준국어대사전》에서는 \"종류별로 나누어서 버린 쓰레기 따위를 거두어 가는 것\"으로 정의하고 있다.',\n        img:\n            'https://i.pinimg.com/564x/2a/f6/d7/2af6d74b0ba62616bf1a3a2926b952f6.jpg',\n    },\n];\nexport const QuizSample = [\n    {\n        title: '화분은 일반 쓰레기다?',\n        Reality: 'O',\n        solution:\n            '부피가 클 경우 대형 폐기물 신고후 배출 수수료를 납부하고 배출해야합니다',\n    },\n    {\n        title: '선풍기를 버리려면 폐기물 스티커를 사서 붙여야 할까요',\n        Reality: 'X',\n        solution:\n            '선풍기, 다리미, 밥솥 같은 소형 폐가전은대부분 지자체에서무료로 수거한답니다!',\n    },\n    {\n        title: '양파껍질은 음식물 쓰레기니까 음식물 쓰레기 봉투에 버려야 한다?',\n        Reality: 'X',\n        solution:\n            '양파껍질과 파뿌리 등 채소 껍질과 뿌리는 음식물 쓰레기가 아닌 일반쓰레기 입니다!',\n    },\n];\nexport const ChattingSampe = [\n    { user: '가가가가가가ㅏ가가가', content: '안ㄹㄴㅁㄹㄴㅁ녕' },\n    {\n        user: 'dongwoo',\n        content:\n            'dasㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㅁㅁㄴㅇㅁㄴㅇ',\n    },\n    { user: 'dongwoo', content: '안ㄴㅁㅇㅁㄴ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄴㅁㄹㄴㅁㄹ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄹㄴㅁㄹㄴㅁ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄴㅁㅇㅁㄴ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄴㅁㄹㄴㅁㄹ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄹㄴㅁㄹㄴㅁ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄴㅁㅇㅁㄴ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안ㄴㅁㄹㄴㅁㄹ녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n    { user: 'dongwoo', content: '안녕' },\n    { user: 'dongwoo', content: 'ㅁㄴㅇㄴㅁㅇㄴㅁㅇㄴㅁㅇㄴ' },\n];\n","import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nfunction Comment({ chat }) {\n    return (\n        <Container>\n            <UserName>{chat?.user}</UserName>\n            <ChatContent>{chat?.content}</ChatContent>\n            <Time>{moment().locale('en').format('LT')}</Time>\n        </Container>\n    );\n}\nconst Time = styled.p`\n    font-size: 12px;\n    margin: auto 0;\n    white-space: nowrap;\n    color: rgba(34, 34, 34, 0.5);\n`;\nconst ChatContent = styled.p`\n    font-size: 12px;\n    word-break: break-all;\n    width: 100%;\n    margin: auto 6px;\n`;\nconst UserName = styled.p`\n    word-break: keep-all;\n    //margin-right: 16px;\n    font-weight: 400;\n    color: #12c0f9;\n    margin: auto 0;\n`;\nconst Container = styled.div`\n    padding: 0.1rem 0.8rem;\n    display: flex;\n    justify-content: space-between;\n    height: 88px;\n    box-shadow: 0px 4px 40px rgba(0, 0, 0, 0.1);\n    border-radius: 14px;\n    background: #ffffff;\n    margin-bottom: 2px;\n    align-items: center; ;\n`;\nexport default Comment;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ChattingSampe } from '../../../SampleData/SampleData';\nimport Comment from './Comment';\nimport { useSelector } from 'react-redux';\n\nfunction Chatting(props) {\n    const [containerSize, setContainerSize] = useState(true);\n    const [chatContent, setChatContent] = useState('');\n    const [chats, setChats] = useState(ChattingSampe);\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        if (!chatContent) {\n            console.log('빈칸');\n        }\n    };\n\n    return (\n        <HelpContainer containerSize={containerSize}>\n            <TitleContainer>\n                {/*<div style={{ margin: 0, backgroundColor: 'red' }}>*/}\n                {/*    <span>Dore-Story </span>*/}\n                {/*    <i className=\"fas fa-comment-dots\" />*/}\n                {/*</div>*/}\n                <i className=\"fas fa-comment-dots\" />\n                <span>실시간 챗팅</span>\n                <Icon\n                    onClick={() => setContainerSize(!containerSize)}\n                    className={\n                        containerSize\n                            ? 'fas fa-expand-alt'\n                            : 'fas fa-compress-arrows-alt'\n                    }\n                />\n            </TitleContainer>\n            <ChatContainer>\n                {chats.map((chat, index) => (\n                    <Comment chat={chat} key={index} />\n                ))}\n            </ChatContainer>\n            {user ? (\n                <InputShowBox onSubmit={onSubmitHandler}>\n                    <InputBox\n                        placeholder=\"입력하세요\"\n                        type=\"text\"\n                        value={chatContent}\n                        onChange={(e) => setChatContent(e.currentTarget.value)}\n                    />\n                    <SubmitIcon\n                        className=\"fas fa-arrow-circle-up\"\n                        onClick={onSubmitHandler}\n                    />\n                </InputShowBox>\n            ) : (\n                <InputShowBox style={{ color: '#adadad' }}>\n                    로그인 후 사용 바랍니다{' '}\n                </InputShowBox>\n            )}\n        </HelpContainer>\n    );\n}\n\nconst SubmitIcon = styled.i`\n    font-size: 1.7rem;\n    color: #adadad;\n    &: hover {\n        color: #14adea;\n    }\n`;\nconst InputShowBox = styled.form`\n    border: 1px solid #e3e3e3;\n    border-radius: 4px;\n    width: 100%;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    background: #ffffff;\n`;\nconst LengthTitle = styled.span`\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 23px;\n    letter-spacing: 0.055em;\n    color: #c4c4c4;\n    margin-right: 15px;\n`;\nconst InputContaine2r = styled.div`\n    border: 1px solid #e3e3e3;\n    border-radius: 4px;\n    max-width: 800px;\n    width: 100%;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    margin: 1.5rem 0;\n    background: red;\n`;\nconst InputBox = styled.input`\n    width: 100%;\n    height: 100%;\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 1rem;\n    line-height: 23px;\n    letter-spacing: 0.055em;\n    //color: #292c30;\n    border: none;\n    outline: none;\n    flex: 1;\n    padding: 10px 8px;\n`;\n\nconst ChatContainer = styled.div`\n    overflow-y: auto;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n\n    background: #fff;\n`;\nconst Icon = styled.i`\n    font-size: 1.2rem;\n`;\nconst TitleContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border-radius: 4px 4px 0 0;\n    background-color: #505669;\n    padding-left: 10px;\n    padding-right: 10px;\n    height: 40px;\n    align-items: center;\n    color: #ffffff;\n`;\nconst HelpContainer = styled.div`\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    -webkit-box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    bottom: 0;\n    height: ${(props) => (props.containerSize ? '500px' : '700px')};\n    right: calc(100% + 10px);\n    width: 360px;\n`;\nexport default Chatting;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Chatting from './Chatting/Chatting';\n\nfunction Help(props) {\n    const [isHelp, setIsHelp] = useState(false);\n    const [isTooltipActive, setIsTooltipActive] = useState(false);\n    function sleep(ms) {\n        const wakeUpTime = Date.now() + ms;\n        while (Date.now() < wakeUpTime) {}\n    }\n    const showTooltip = () => {\n        setIsTooltipActive(true);\n    };\n    const hideTooltip = () => {\n        // sleep(2000);\n        setIsTooltipActive(false);\n    };\n    const onHandleHelp = (e) => {\n        setIsHelp(!isHelp);\n    };\n    return (\n        <Container>\n            <HelpBox onMouseEnter={showTooltip} onMouseLeave={hideTooltip}>\n                <Social\n                    className={\n                        isHelp\n                            ? 'far fa-times-circle'\n                            : 'fas fa-question-circle'\n                    }\n                    onClick={onHandleHelp}\n                />\n            </HelpBox>\n\n            {isHelp && <Chatting />}\n            {isTooltipActive && !isHelp && (\n                <ToolTipbox>\n                    실시간 채팅을 확인 해보세요! &nbsp;\n                    <Icon className=\"far fa-grin-hearts\" />\n                </ToolTipbox>\n            )}\n        </Container>\n    );\n}\nconst Icon = styled.i`\n    font-size: 14px;\n`;\nconst ToolTipbox = styled.div`\n    position: absolute;\n    bottom: 20px;\n    right: calc(100% + 10px);\n    width: 128px;\n    height: 3.2rem;\n    padding: 6px 10px;\n    font-size: 14px;\n    word-break: keep-all;\n    color: #222;\n    border-radius: 6px;\n    letter-spacing: -0.5px;\n    background-color: #fff;\n    -webkit-box-shadow: 0 0 30px 0 rgb(0 0 0 / 20%);\n    box-shadow: 0 0 30px 0 rgb(0 0 0 / 20%);\n`;\n// const Container = styled.div`\n//     position: fixed;\n//     right: 12px;\n//     bottom: 10px;\n//     z-index: 10000;\n// `;\nconst Container = styled.div`\n    position: fixed;\n    right: 12px;\n    bottom: 10px;\n    z-index: 10000;\n`;\n\nconst Social = styled.i`\n    color: #000;\n`;\nconst HelpBox = styled.div`\n    background: white;\n    font-size: 3rem;\n    width: 80px;\n    height: 80px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    cursor: pointer;\n    border-radius: 50%;\n    text-decoration: none;\n    //&: hover {\n    //    opacity: 0.8;\n    //}\n`;\nconst HelpContainer = styled.div`\n    position: absolute;\n    background: red;\n    bottom: 0;\n    height: 300px;\n    right: calc(100% + 10px);\n    width: 360px;\n    -webkit-box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    box-shadow: 0 0 30px 0 rgb(0 0 0 / 29%);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n`;\nexport default Help;\n","import React, { useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw, EditorState } from 'draft-js';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FailAlert, SuccessAlert } from '../../Alert/Alert';\nimport { useHistory } from 'react-router-dom';\n\nfunction UploadPage(props) {\n    const [editor, setEditor] = useState(EditorState.createEmpty());\n    const [title, setTitle] = useState('');\n    const [image, setImage] = useState(null);\n    const history = useHistory();\n    const onEditorChange = (editorState) => {\n        setEditor(editorState);\n    };\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n        if (!title) {\n            FailAlert('제목을 입력해주세요');\n            return;\n        }\n        if (\n            draftToHtml(convertToRaw(editor.getCurrentContent())).length === 8\n        ) {\n            FailAlert('내용을 입력해주세요');\n            return;\n        }\n        let params = {\n            title: title,\n            content: draftToHtml(convertToRaw(editor.getCurrentContent())),\n            image: image,\n        };\n        axios\n            .post('/posts/', params)\n            .then((res) => {\n                console.log(res);\n                if (res.statusText !== 'Created') {\n                    console.log(res);\n                    return;\n                }\n                SuccessAlert('게시글 등록 성공');\n                history.push('/Community');\n            })\n            .catch((err) => {\n                console.log(err);\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err.response);\n                }\n            });\n    };\n    // const uploadImageCallBack = (file) => {\n    //     return new Promise((resolve, reject) => {\n    //         const xhr = new XMLHttpRequest();\n    //         xhr.open(\n    //             'POST',\n    //             'http://example.com#access_token=ACCESS_TOKEN&token_type=Bearer&expires_in=3600'\n    //         );\n    //         xhr.setRequestHeader('Authorization', '-------');\n    //         const data = new FormData();\n    //         data.append('image', file);\n    //         xhr.send(data);\n    //         xhr.addEventListener('load', () => {\n    //             const response = JSON.parse(xhr.responseText);\n    //             console.log(response);\n    //             resolve(response);\n    //         });\n    //         xhr.addEventListener('error', () => {\n    //             console.log('error');\n    //             const error = JSON.parse(xhr.responseText);\n    //             reject(error);\n    //         });\n    //     });\n    // };\n    const uploadImageCallBack = (file) => {\n        console.log(URL.createObjectURL(file));\n        // console.log(file);\n        return new Promise((resolve, reject) => {\n            resolve({\n                data: { link: URL.createObjectURL(file) },\n            });\n        });\n    };\n\n    return (\n        <Container>\n            <Title> 게시글 등록</Title>\n            <form>\n                <div>\n                    <TitleContainer>\n                        <InputBox\n                            placeholder=\"제목을 입력하세요.\"\n                            type=\"text\"\n                            maxLength=\"60\"\n                            value={title}\n                            onChange={(e) => setTitle(e.currentTarget.value)}\n                        />\n                        <LengthTitle>{title.length} / 60</LengthTitle>\n                    </TitleContainer>\n\n                    <Editor\n                        editorStyle={{\n                            width: '100%',\n                            minHeight: 360,\n                            borderWidth: 1,\n                            borderStyle: 'solid',\n                            borderColor: 'lightgray',\n                            padding: '10px 20px 10px 20px',\n                        }}\n                        editorState={editor}\n                        onEditorStateChange={onEditorChange}\n                        toolbar={{\n                            inline: { inDropdown: true },\n                            list: { inDropdown: true },\n                            textAlign: { inDropdown: true },\n                            link: { inDropdown: true },\n                            history: { inDropdown: true },\n                            image: {\n                                uploadCallback: uploadImageCallBack,\n                            },\n                        }}\n                        placeholder=\"내용을 작성해주세요.\"\n                        // 한국어 설정\n                        localization={{\n                            locale: 'ko',\n                        }}\n                    />\n\n                    <SubmitBtn\n                        style={{\n                            background:\n                                draftToHtml(\n                                    convertToRaw(editor.getCurrentContent())\n                                ).length === 8\n                                    ? 'red'\n                                    : '#f9f9f9',\n                        }}\n                        onClick={onHandleSubmit}\n                    >\n                        작성\n                    </SubmitBtn>\n                    {/*<textarea*/}\n                    {/*    style={{ width: '100%', height: 200 }}*/}\n                    {/*    disabled*/}\n                    {/*    value={draftToHtml(*/}\n                    {/*        convertToRaw(editor.getCurrentContent())*/}\n                    {/*    )}*/}\n                    {/*/>*/}\n                </div>\n            </form>\n        </Container>\n    );\n}\n\nconst TitleContainer = styled.div`\n    border: 1px solid #e3e3e3;\n    border-radius: 4px;\n    max-width: 800px;\n    width: 100%;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    margin: 1.5rem 0;\n`;\nconst LengthTitle = styled.span`\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 23px;\n    letter-spacing: 0.055em;\n    color: #c4c4c4;\n    margin-right: 15px;\n`;\nconst InputBox = styled.input`\n    width: 100%;\n    height: 100%;\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 1rem;\n    line-height: 23px;\n    letter-spacing: 0.055em;\n    //color: #292c30;\n    border: none;\n    outline: none;\n    flex: 1;\n    margin-left: 16px;\n`;\nconst Container = styled.div`\n    max-width: 1250px;\n    margin: auto;\n    height: 1200px;\n    padding: 1.5rem;\n`;\nconst SubmitBtn = styled.button`\n    width: 200px;\n    height: 56px;\n    margin-top: 1.5rem;\n    border: 1px solid #e7e7e7;\n    box-shadow: 0 2px 15px 0 rgb(0 0 0 / 70%);\n`;\nconst Title = styled.p`\n    font-family: Noto Sans KR;\n    //margin-top: 2rem;\n    //margin-bottom: 2rem;\n    //font-style: normal;\n    //font-weight: bold;\n    //font-size: 24px;\n    //line-height: 35px;\n    font-size: 34px;\n    color: #333;\n    margin-top: 60px;\n    width: 100%;\n    float: left;\n    margin-bottom: 60px;\n    height: 40px;\n`;\n// export default UploadPage;\n\n//\n// import React from 'react';\n//\n// function UploadPage(props) {\n//     return <div>Upload</div>;\n// }\n\nexport default UploadPage;\n","import React from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nfunction PaginationComponent({ totalPage, page, handleChange }) {\n    return (\n        <div>\n            <Pagination\n                count={totalPage}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                page={page}\n                onChange={handleChange}\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                }}\n            />\n            {/*반응형 사용*/}\n            {/*<Pagination*/}\n            {/*    count={totalPage}*/}\n            {/*    variant=\"outlined\"*/}\n            {/*    shape=\"rounded\"*/}\n            {/*    value={page}*/}\n            {/*    onChange={handleChange}*/}\n            {/*    siblingCount={0}*/}\n            {/*    style={{*/}\n            {/*        display: 'flex',*/}\n            {/*        justifyContent: 'center',*/}\n            {/*    }}*/}\n            {/*/>*/}\n        </div>\n    );\n}\n\nexport default PaginationComponent;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FailAlert } from '../../Alert/Alert';\nimport styled from 'styled-components';\nimport Table from 'react-bootstrap/Table';\nimport Pagination from '@material-ui/lab/Pagination';\nimport api from '../../settings/api';\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\nimport { useHistory } from 'react-router-dom';\n\nfunction NoticePage(props) {\n    const [noticePost, setNoticepost] = useState([]);\n    const [page, setPage] = useState(1); //현재 페이지\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\n    const history = useHistory();\n    useEffect(() => {\n        fetchNotice();\n    }, []);\n    const handleChange = (e, value) => {\n        e.preventDefault();\n        setPage(value);\n        fetchNotice(value);\n    };\n    const onClickToDetail = (e, postId) => {\n        history.push(`/notice/${postId}`);\n    };\n    const fetchNotice = () => {\n        axios\n            .get('notices/')\n            .then((res) => {\n                console.log('공지사항 결과', res);\n                if (res.statusText !== 'OK') {\n                    // console.log(res);\n                    return;\n                }\n                setNoticepost(res.data.results);\n\n                setTotalPage(\n                    parseInt(res.data.count) !== 0\n                        ? parseInt(res.data.count) % 10 === 0\n                            ? parseInt(res.data.count / 10)\n                            : parseInt(res.data.count / 10) + 1\n                        : 1\n                );\n            })\n            .catch((err) => {\n                if (err.response?.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err);\n                }\n            });\n    };\n    return (\n        <Container>\n            <Title>공지사항</Title>\n            {/*<Table hover size=\"sm\" style={{ borderBottom: '4px solid #222' }}>*/}\n            {/*    <thead>*/}\n            {/*        <Headtr>*/}\n            {/*            <HeadTitleTH>제목</HeadTitleTH>*/}\n            {/*            <HeadUserTH>등록일</HeadUserTH>*/}\n            {/*        </Headtr>*/}\n            {/*    </thead>*/}\n            {/*    <tbody>*/}\n            {/*        {noticePost.map((post, index) => (*/}\n            {/*            <TR*/}\n            {/*                key={index}*/}\n            {/*                // onClick={(e) => {*/}\n            {/*                //     onClickToDetail(e, post.id);*/}\n            {/*                // }}*/}\n            {/*            >*/}\n            {/*                <ContentTitle>{post.title}</ContentTitle>*/}\n            {/*                <ContentSmall>*/}\n            {/*                    {post.created_at.substr(0, 10)}*/}\n            {/*                </ContentSmall>*/}\n            {/*            </TR>*/}\n            {/*        ))}*/}\n            {/*    </tbody>*/}\n            {/*</Table>*/}\n            {/**/}\n            {/**/}\n            {/**/}\n            <TableContainer>\n                <HeadTitle>제목</HeadTitle>\n                <HeadDate>등록일</HeadDate>\n            </TableContainer>\n            {noticePost?.map((post, index) => (\n                <TableRowContainer\n                    key={index}\n                    onClick={(e) => {\n                        onClickToDetail(e, post.id);\n                    }}\n                >\n                    <div>\n                        <TitleRow>{post.title}</TitleRow>\n                        <CreatedRow>{post.created_at.substr(0, 10)}</CreatedRow>\n                    </div>\n                    <CreatedRow1>{post.created_at.substr(0, 10)}</CreatedRow1>\n                </TableRowContainer>\n            ))}\n            <hr\n                style={{\n                    backgroundColor: '#222',\n                    height: '1px',\n                    margin: 0,\n                }}\n            />\n            <PaginationComponent\n                totalPage={totalPage}\n                page={page}\n                handleChange={handleChange}\n            />\n            {/*<Pagination*/}\n            {/*    count={totalPage}*/}\n            {/*    variant=\"outlined\"*/}\n            {/*    shape=\"rounded\"*/}\n            {/*    page={page}*/}\n            {/*    onChange={handleChange}*/}\n            {/*    style={{*/}\n            {/*        display: 'flex',*/}\n            {/*        justifyContent: 'center',*/}\n            {/*    }}*/}\n            {/*/>*/}\n        </Container>\n    );\n}\nconst HeadTitle = styled.p`\n    margin: 0;\n    font-weight: 600;\n    color: #000;\n    font-size: 20px;\n`;\nconst HeadDate = styled.p`\n    margin: 0;\n    font-weight: 600;\n    color: #000;\n    font-size: 20px;\n    @media only screen and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst Date = styled.div`\n    display: block;\n    @media only screen and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst TitleRow = styled.p`\n    margin: 0;\n    font-size: 18px;\n    font-weight: normal;\n`;\nconst CreatedRow = styled.p`\n    margin: 0;\n    color: #777777;\n    display: none;\n    font-weight: bolder;\n    @media only screen and (max-width: 768px) {\n        display: block;\n    }\n`;\nconst CreatedRow1 = styled.p`\n    margin: 0;\n    color: #777777;\n    display: block;\n    font-size: 1rem;\n    line-height: 1.5;\n    font-weight: bolder;\n    @media only screen and (max-width: 768px) {\n        display: none;\n    }\n`;\nconst TableRowContainer = styled.div`\n    border-top: 1px solid #dee2e6;\n    align-items: center;\n    padding: 17px;\n    display: flex;\n    justify-content: space-between;\n    &:hover {\n        cursor: pointer;\n        background: #dbd7d7;\n    }\n`;\nconst TableContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 3px solid #919191;\n    border-top: 4px solid #222;\n    padding: 17px 21px 16px;\n    font-size: 18px;\n    line-height: 1.5;\n    font-family: 'NotoSansKR', sans-serif;\n    font-weight: bold;\n`;\n//\n//\n//\n\nconst Container = styled.div`\n    max-width: 1100px;\n    padding: 1.5rem;\n    margin: 3rem auto auto;\n`;\nconst TR = styled.tr`\n    cursor: pointer;\n`;\nconst TH = styled.th`\n    line-height: 3.25;\n    font-size: 1.2rem;\n    color: #000000;\n`;\nconst HeadTitleTH = styled(TH)`\n    //text-align: left;\n    //width: 75%;\n    //white-space: nowrap;\n    //font-family: 'NotoSansKR', sans-serif;\n    text-align: left;\n    width: 80%;\n    min-width: 4.3rem;\n`;\nconst HeadUserTH = styled(TH)`\n    text-align: center;\n    width: 10%;\n    min-width: 4.3rem;\n`;\n\nconst Headtr = styled.tr`\n    border-bottom: 3px solid #919191;\n    border-top: 4px solid #222;\n`;\nconst TD = styled.td`\n    line-height: 3.25;\n    font-weight: normal;\n    text-overflow: ellipsis;\n`;\nconst ContentTitle = styled(TD)`\n    text-align: left;\n`;\n\nconst ContentSmall = styled(TD)`\n    text-align: center;\n`;\nconst Title = styled.h3`\n    font-weight: 500;\n    font-size: 40px;\n    color: #000;\n    line-height: 54px;\n    letter-spacing: -3px;\n    margin-bottom: 4.5rem;\n`;\nexport default NoticePage;\n","import React from 'react';\n\nfunction RakingPage(props) {\n    return <div>RakingPage</div>;\n}\n\nexport default RakingPage;\n","export const calculateChatDate = (d) => {\n    if (d === null) return '';\n\n    const today = new Date();\n    const target = new Date(d);\n    const diffM = Math.floor((today.getTime() - target.getTime()) / 1000 / 60);\n    if (diffM < 1) return '방금전';\n    if (diffM < 60) return `${diffM}분 전`;\n\n    const diffH = Math.floor(diffM / 60);\n    if (diffH < 24) return `${diffH}시간 전`;\n\n    const diffD = Math.floor(diffH / 24);\n    if (diffD < 365) return `${diffD}일 전`;\n\n    return `${Math.floor(diffD / 365)}년 전`;\n};\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { calculateChatDate } from '../../Util/Util';\n\nfunction CommunityTable({ posts }) {\n    const history = useHistory();\n    const onClickToDetail = (e, postId) => {\n        history.push(`/post/${postId}`);\n    };\n    return (\n        <div>\n            <Table hover size=\"sm\">\n                <thead>\n                    <Headtr>\n                        <HeadTitleTH>제목</HeadTitleTH>\n                        <HeadUserTH>유저</HeadUserTH>\n                        <HeadSmallTH>댓글</HeadSmallTH>\n                        <HeadSmallTH>조회 수</HeadSmallTH>\n                        <HeadSmallTH>활동</HeadSmallTH>\n                    </Headtr>\n                </thead>\n                <tbody>\n                    {posts?.map((post, index) => (\n                        <TR\n                            key={index}\n                            onClick={(e) => {\n                                onClickToDetail(e, post.id);\n                            }}\n                        >\n                            <ContentTitle>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <TitleFont>\n                                        {post.title}\n                                        {/*{post.image && (*/}\n                                        {/*    <ImageIcon className=\"far fa-file-image\" />*/}\n                                        {/*)}*/}\n                                    </TitleFont>\n                                    {/*{post.title}*/}\n                                    {post.image && (\n                                        <ImageIcon className=\"far fa-file-image\" />\n                                    )}\n                                </div>\n                            </ContentTitle>\n                            <ContentUser>{post.user.nickname}</ContentUser>\n                            <ContentSmall>{post.review_count}</ContentSmall>\n                            <ContentSmall>{post.hit_count}</ContentSmall>\n                            <ContentSmall>\n                                {calculateChatDate(post.created_at)}\n                            </ContentSmall>\n                        </TR>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nconst TitleFont = styled.span`\n    overflow: hidden;\n    margin: 0;\n    display: -webkit-box;\n    -webkit-line-clamp: 1; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    color: #212529;\n    font-size: 1rem;\n    font-weight: 400;\n`;\nconst TR = styled.tr`\n    cursor: pointer;\n`;\nconst ImageIcon = styled.i`\n    margin-left: 5px;\n    color: #2691d9;\n`;\nconst TH = styled.th`\n    line-height: 3.25;\n    font-size: 1rem;\n    color: #919191;\n`;\nconst HeadTitleTH = styled(TH)`\n    text-align: left;\n    width: 75%;\n    white-space: nowrap;\n`;\nconst HeadUserTH = styled(TH)`\n    text-align: center;\n    width: 10%;\n    min-width: 4.3rem;\n    white-space: nowrap;\n`;\nconst HeadSmallTH = styled(TH)`\n    width: 5%;\n    min-width: 4.9rem;\n    text-align: center;\n`;\nconst Headtr = styled.tr`\n    border-bottom: 3px solid #919191;\n    border-top: hidden;\n`;\nconst TD = styled.td`\n    line-height: 2.25;\n`;\nconst ContentTitle = styled(TD)`\n    text-align: left;\n`;\nconst ContentUser = styled(TD)`\n    text-align: center;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 1; /* number of lines to show */\n    -webkit-box-orient: vertical;\n`;\nconst ContentSmall = styled(TD)`\n    text-align: center;\n`;\nexport default CommunityTable;\n","import React from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { calculateChatDate } from '../../Util/Util';\nimport styled from 'styled-components';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { useHistory } from 'react-router-dom';\n\nfunction CommunityBig({ posts }) {\n    const history = useHistory();\n    const onClickToDetail = (e, postId) => {\n        history.push(`/post/${postId}`);\n    };\n    return (\n        <div>\n            {posts?.map((post, index) => (\n                <Post\n                    key={index}\n                    onClick={(e) => {\n                        onClickToDetail(e, post.id);\n                    }}\n                >\n                    <div style={{ display: 'flex' }}>\n                        <div\n                            style={{\n                                width: '100%',\n                            }}\n                        >\n                            <PostTitle>{post.title}</PostTitle>\n                            <PostContent>\n                                {\n                                    // post.content\n                                    post.content.replace(/(<([^>]+)>)/gi, '') // 태그제거\n                                }\n                            </PostContent>\n                            <PostInforBox>\n                                <Breadcrumb>\n                                    <Breadcrumb.Item active>\n                                        조회수 {post.hit_count}\n                                    </Breadcrumb.Item>\n                                    <Breadcrumb.Item active>\n                                        댓글 {post.review_count}\n                                    </Breadcrumb.Item>\n                                    <Breadcrumb.Item active>\n                                        {/*55분 전*/}\n                                        {calculateChatDate(post.created_at)}\n                                    </Breadcrumb.Item>\n                                    <Breadcrumb.Item active>\n                                        {post.user.nickname}\n                                    </Breadcrumb.Item>\n                                </Breadcrumb>\n                            </PostInforBox>\n                        </div>\n                        {post.image && (\n                            <div>\n                                <PostImg src={post.image} alt=\"img\" />\n                            </div>\n                        )}\n                    </div>\n                </Post>\n            ))}\n        </div>\n    );\n}\nconst Post = styled.div`\n    width: 100%;\n    height: 219.85px;\n    padding: 2rem 1rem;\n    margin-top: 1.5rem;\n    background: #ffffff;\n    border: 8px solid #f5f5f5;\n    box-sizing: border-box;\n    border-radius: 2px;\n    cursor: pointer;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\nconst PostImg = styled.img`\n    width: 10rem;\n    height: 10rem;\n    margin-left: 1.5rem;\n`;\nconst PostTitle = styled.p`\n    font-style: normal;\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 127.5%;\n    color: #001129;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 1; /* number of lines to show */\n    -webkit-box-orient: vertical;\n`;\nconst PostContent = styled.p`\n    //text-overflow: ellipsis;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 23px;\n    color: #5a5a5a;\n`;\nconst PostInforBox = styled.div`\n    height: 40px;\n    background: #f1f1f1;\n    border: 1px solid #f4f4f4;\n    box-sizing: border-box;\n    border-radius: 4px;\n`;\n// 사진있는 이위에는 포스트 관련 styled-component\n\nconst Container = styled.div`\n    max-width: 1250px;\n    margin: auto;\n    padding: 2rem 2rem;\n`;\nconst Title = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 36px;\n    line-height: 127.5%;\n    color: #001129;\n`;\nconst Subtitle = styled.p`\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 26px;\n\n    color: #666666;\n`;\nconst InputGroups = styled(InputGroup)`\n    max-width: 800px;\n    margin: 1.5rem auto auto;\n    box-sizing: border-box;\n    padding: 0;\n    border-radius: 0.25rem;\n`;\nconst SearchBtn = styled(Button)`\n    border: none;\n    border-radius: 0.25rem;\n    background: #052065;\n    color: #ffffff;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 18px;\n`;\nconst InputForm = styled(FormControl)`\n    height: 44px;\n    :focus {\n        border-color: #ff0000;\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\n            0 0 8px rgba(255, 0, 0, 0.6);\n    }\n`;\nexport default CommunityBig;\n","import React, { useEffect, useState } from 'react';\nimport { SampleData } from '../../SampleData/SampleData';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport styled from 'styled-components';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport Table from 'react-bootstrap/Table';\nimport { useSelector } from 'react-redux';\n// import { selectUser } from '../../Redux/store';\nimport { selectUser } from '../../Redux/userSlice';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { FailAlert, SuccessAlert } from '../../Alert/Alert';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Spinner from 'react-bootstrap/Spinner';\nimport CommunityTable from './CommunityTable';\nimport CommunityBig from './CommunityBig';\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\n\nfunction CommunityPage(props) {\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\n    const [posts, setPosts] = useState([]);\n    const [isDisplay, setIsDisplay] = useState('big');\n    const [search, setSearch] = useState('');\n    const [page, setPage] = useState(1); //현재 페이지\n    const [isLoading, setIsLoading] = useState(true);\n    // const user = useSelector(selectUser);\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    const history = useHistory();\n    const onChangeDisplay = (e, Display) => {\n        setIsDisplay(Display);\n    };\n    const handleChange = (e, value) => {\n        setPage(value);\n        fetchPost(value);\n    };\n    useEffect(() => {\n        fetchPost(page);\n    }, []);\n\n    const fetchPost = (page, keyword) => {\n        let params = { page };\n        if (keyword) {\n            params.keyword = keyword;\n        }\n        // console.log(params);\n        axios\n            .get(`/posts/`, { params }, { withCredentials: true })\n            .then((res) => {\n                console.log('res', res);\n                if (res.statusText !== 'OK') {\n                    // console.log(res);\n                    return;\n                }\n                // console.log(res);\n                if (res.data?.count === 0) {\n                    FailAlert('게시글이 존재하지 않습니다');\n                    return;\n                }\n                setPosts(res.data?.results);\n                setTotalPage(\n                    parseInt(res.data.count) !== 0\n                        ? parseInt(res.data.count) % 20 === 0\n                            ? parseInt(res.data.count / 20)\n                            : parseInt(res.data.count / 20) + 1\n                        : 1\n                );\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                if (err.response.data?.msg) {\n                    FailAlert(err.response.data.msg);\n                    alert(err.response.data.msg);\n                }\n            });\n    };\n    return (\n        <>\n            {isLoading ? (\n                <SpinnerContainer>\n                    <Spinner animation=\"border\" />\n                    <h2>&nbsp; 로딩 중 ...</h2>\n                </SpinnerContainer>\n            ) : (\n                <Container>\n                    <div>\n                        <Title>커뮤니티</Title>\n                        <Subtitle>사람들과 지식을 공유해보세요</Subtitle>\n                        <form\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                fetchPost(1, search);\n                            }}\n                        >\n                            <InputGroups>\n                                <InputForm\n                                    // onSubmit={() => fetchPost(1, search)}\n                                    placeholder=\"검색어\"\n                                    value={search}\n                                    onChange={(e) => {\n                                        setSearch(e.target.value);\n                                    }}\n                                />\n                                <InputGroup.Append>\n                                    <SearchBtn\n                                        variant=\"outline-secondary\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            fetchPost(1, search);\n                                        }}\n                                    >\n                                        <i className=\"fas fa-search\" />\n                                        검색\n                                    </SearchBtn>\n                                </InputGroup.Append>\n                            </InputGroups>\n                        </form>\n                        <IconBox>\n                            <div>\n                                {user && (\n                                    <WriteButton\n                                        onClick={() => {\n                                            history.push('/upload');\n                                        }}\n                                    >\n                                        글쓰기\n                                    </WriteButton>\n                                )}\n                            </div>\n                            <div>\n                                <Icons\n                                    className=\"fas fa-th-large\"\n                                    style={{\n                                        color:\n                                            isDisplay !== 'big'\n                                                ? '#000'\n                                                : '#7fff00',\n                                    }}\n                                    onClick={(e) => {\n                                        onChangeDisplay(e, 'big');\n                                    }}\n                                />\n                                <Icons\n                                    className=\"fas fa-list\"\n                                    style={{\n                                        color:\n                                            isDisplay !== 'small'\n                                                ? '#000'\n                                                : '#7fff00',\n                                    }}\n                                    onClick={(e) => {\n                                        onChangeDisplay(e, 'small');\n                                    }}\n                                />\n                            </div>\n                        </IconBox>\n\n                        {isDisplay === 'big' ? (\n                            <CommunityBig posts={posts} />\n                        ) : (\n                            <CommunityTable posts={posts} />\n                        )}\n                        <PaginationComponent\n                            totalPage={totalPage}\n                            page={page}\n                            handleChange={handleChange}\n                        />\n                        {/*<Pagination*/}\n                        {/*    count={totalPage}*/}\n                        {/*    variant=\"outlined\"*/}\n                        {/*    shape=\"rounded\"*/}\n                        {/*    page={page}*/}\n                        {/*    onChange={handleChange}*/}\n                        {/*    style={{*/}\n                        {/*        display: 'flex',*/}\n                        {/*        justifyContent: 'center',*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                        {/*반응형 사용*/}\n                        {/*<Pagination*/}\n                        {/*    count={totalPage}*/}\n                        {/*    variant=\"outlined\"*/}\n                        {/*    shape=\"rounded\"*/}\n                        {/*    value={page}*/}\n                        {/*    onChange={handleChange}*/}\n                        {/*    siblingCount={0}*/}\n                        {/*    style={{*/}\n                        {/*        display: 'flex',*/}\n                        {/*        justifyContent: 'center',*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                    </div>\n                </Container>\n            )}\n        </>\n    );\n}\nconst WriteButton = styled.button`\n    min-width: 53px;\n    font-size: 16px;\n    color: #fff !important;\n    text-align: center;\n    background-color: #455d9d;\n    border-radius: 2px;\n    padding: 10px 14px 10px 14px;\n    border: 1px solid #455d9d;\n    display: inline-block;\n    line-height: 1;\n    &:hover {\n        background: #263d7a;\n        //opacity: 0.9;\n    }\n`;\nconst SpinnerContainer = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n//이위는 게시글 작게보기\nconst IconBox = styled.div`\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    padding: 0rem 1rem;\n    margin-top: 1rem;\n`;\nconst Icons = styled.i`\n    font-size: 1.2rem;\n    margin-left: 1.2rem;\n    cursor: pointer;\n`;\nconst Container = styled.div`\n    max-width: 1250px;\n    margin: auto;\n    padding: 2rem 2rem;\n`;\nconst Title = styled.p`\n    font-style: normal;\n    font-weight: bold;\n    font-size: 36px;\n    line-height: 127.5%;\n    color: #001129;\n`;\nconst Subtitle = styled.p`\n    font-family: Noto Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 26px;\n\n    color: #666666;\n`;\nconst InputGroups = styled(InputGroup)`\n    max-width: 800px;\n    margin: 1.5rem auto auto;\n    box-sizing: border-box;\n    padding: 0;\n    border-radius: 0.25rem;\n`;\nconst SearchBtn = styled(Button)`\n    border: none;\n    border-radius: 0.25rem;\n    background: #052065;\n    color: #ffffff;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 18px;\n`;\nconst InputForm = styled(FormControl)`\n    height: 44px;\n    :focus {\n        border-color: #ff0000;\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\n            0 0 8px rgba(255, 0, 0, 0.6);\n    }\n`;\nexport default CommunityPage;\n","import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { FailAlert, SuccessAlert } from '../../Alert/Alert';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport 'moment/locale/ko';\nimport moment from 'moment';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { useSelector } from 'react-redux';\nimport { EditorState, Editor } from 'draft-js';\nimport { convertFromHTML } from 'draft-convert';\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\nfunction DetailPage(props) {\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    const [reviewText, setReviewText] = useState('');\n    const [post, setPost] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    const postId = props.match.params.postId; ///URL 에서 가져옴\n    const history = useHistory();\n    const [page, setPage] = useState(1); //현재 페이지\n    const [totalPage, setTotalPage] = useState(1); //  전체 크기\n    const [totalReview, setTotalReview] = useState(0); //총 리뷰 갯수\n    const [editor, setEditor] = useState(EditorState.createEmpty());\n    const onChange = (editorState) => {\n        setEditor(editorState);\n    };\n\n    const handleChange = (e, value) => {\n        // e.preventDefault();\n        setPage(value);\n        fetchReview(value);\n    };\n    useEffect(() => {\n        fetchPost();\n        fetchReview(1);\n        // importHTML();\n    }, []);\n    const onSubmitReview = (e) => {\n        // e.preventDefault();\n        if (!reviewText.length) {\n            FailAlert('댓글을 입력해주세요');\n            return;\n        }\n        let params = {\n            post: postId,\n            content: reviewText,\n        };\n\n        axios\n            .post('/reviews/', params)\n            .then((res) => {\n                if (res.statusText !== 'Created') {\n                    console.log(res);\n                    return;\n                }\n                SuccessAlert('댓글작성 성공');\n                fetchReview(1);\n                setPage(1);\n                setReviewText('');\n            })\n            .catch((err) => {\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err.response);\n                }\n            });\n    };\n    const fetchPost = () => {\n        axios\n            .get(`/posts/${postId}/`)\n            .then((res) => {\n                if (res.statusText !== 'OK') {\n                    FailAlert('존재하지 않는 게시글 입니다');\n                    return;\n                }\n                console.log(res.data.content);\n                onChange(\n                    EditorState.push(editor, convertFromHTML(res.data.content))\n                );\n                setPost(res.data);\n            })\n            .catch((err) => {\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err);\n                    FailAlert('존재하지 않는 게시글 입니다');\n                    history.push('/');\n                }\n            });\n    };\n    const fetchReview = (page) => {\n        let params = { page };\n        axios\n            .get(`/reviews/?post=${postId}`, { params })\n            .then((res) => {\n                // console.log('res', res);\n                if (res.statusText !== 'OK') {\n                    // console.log(res);\n                    return;\n                }\n                setReviews(res.data.results);\n                setTotalPage(\n                    parseInt(res.data.count) !== 0\n                        ? parseInt(res.data.count) % 4 === 0\n                            ? parseInt(res.data.count / 4)\n                            : parseInt(res.data.count / 4) + 1\n                        : 1\n                );\n                setTotalReview(res.data.count);\n                // console.log('댓글불러오기 성공', res);\n            })\n            .catch((err) => {\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err);\n                }\n            });\n    };\n    // const onBlur = (state) => {\n    //     //  convertToRaw from draft-js;\n    //     const contentState = convertToRaw(editor.getCurrentContent());\n    //     // save contentState\n    // };\n    // const editorRef = useRef(null);\n    // const [editable, setEditable] = useState(false);\n    return (\n        <Container>\n            <Editor\n                // editorState={e}\n                readOnly={true}\n                // onBlur={onBlur}\n                // ref={editorRef}\n                // autoCapitalize=\"none\"\n                // autoComplete=\"off\"\n                // autoCorrect=\"off\"\n                // spellCheck={false}\n                editorState={editor}\n                onChange={onChange}\n            />\n\n            {/*{console.log('제목', post.title)}*/}\n            {/*{console.log('내용', post.content)}*/}\n            {/*{console.log(reviews)}*/}\n\n            {/*리뷰*/}\n            <ReviewContainer>\n                <TitleContainer>\n                    <TotalReview>\n                        댓글\n                        <TotalReviewCount>{totalReview}</TotalReviewCount>\n                    </TotalReview>\n                </TitleContainer>\n                {reviews?.map((review) => (\n                    <ReviewBox key={review.id}>\n                        <AvartarContainer\n                            style={{\n                                // backgroundImage: `url(${trush1})`,\n\n                                backgroundImage:\n                                    'url(https://i.pinimg.com/originals/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg)',\n                            }}\n                        >\n                            {/*<Avartar*/}\n                            {/*    src={trush1}*/}\n                            {/*    // src={*/}\n                            {/*    //     'https://i.pinimg.com/originals/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg'*/}\n                            {/*    // }*/}\n                            {/*/>*/}\n                        </AvartarContainer>\n                        <ReviewinfoBox>\n                            <div>\n                                <ReviewUser>{review.user.nickname}</ReviewUser>\n                                <ReviewDate>\n                                    {moment(review.created_at)\n                                        .subtract(10, 'days')\n                                        .calendar()}\n                                    {moment(review.created_at).format('LTS')}\n                                    {/*{moment(review.created_at).format('LLLL')}*/}\n                                </ReviewDate>\n                            </div>\n                            <ReviewContent>{review.content}</ReviewContent>\n                        </ReviewinfoBox>\n                    </ReviewBox>\n                ))}\n                <PaginationComponent\n                    totalPage={totalPage}\n                    page={page}\n                    handleChange={handleChange}\n                />\n                {/*<Pagination*/}\n                {/*    count={totalPage}*/}\n                {/*    variant=\"outlined\"*/}\n                {/*    shape=\"rounded\"*/}\n                {/*    page={page}*/}\n                {/*    onChange={handleChange}*/}\n                {/*    style={{*/}\n                {/*        display: 'flex',*/}\n                {/*        justifyContent: 'center',*/}\n                {/*    }}*/}\n                {/*/>*/}\n                {/*<InputForm as=\"textarea\" aria-label=\"With textarea\" />*/}\n                <ReviewSubmitBox>\n                    <TextArea\n                        value={reviewText}\n                        className=\"form-control\"\n                        id=\"exampleFormControlTextarea1\"\n                        rows={4}\n                        maxLength=\"99\"\n                        disabled={!user}\n                        placeholder={\n                            user\n                                ? '댓글을 입력 해보세요!'\n                                : '로그인 후, 이용해주세요'\n                        }\n                        onChange={(e) => {\n                            // reviewText.length < 100 &&\n                            setReviewText(e.currentTarget.value);\n                        }}\n                    />\n                    <BottomContainer>\n                        <CountReviewText>\n                            {reviewText.length}/100\n                        </CountReviewText>\n                        <SubmitButton\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            onClick={onSubmitReview}\n                            disabled={!user}\n                        >\n                            등록\n                        </SubmitButton>\n                    </BottomContainer>\n                </ReviewSubmitBox>\n            </ReviewContainer>\n        </Container>\n    );\n}\nconst BottomContainer = styled.div`\n    align-items: center;\n    margin-top: 0.7rem;\n`;\nconst CountReviewText = styled.span`\n    text-align: center;\n    align-items: center;\n    margin-right: 0.5rem;\n`;\nconst SubmitButton = styled(Button)``;\nconst ReviewSubmitBox = styled.div`\n    height: 203px;\n    background-color: #e8eaee;\n    border: 1px solid #dcdde1;\n    padding: 1rem;\n    text-align: right;\n`;\nconst TextArea = styled.textarea`\n    resize: none;\n    height: 130px;\n    padding: 10px 10px 10px 15px;\n`;\nconst InputForm = styled(FormControl)`\n    height: 44px;\n    :focus {\n        border-color: #ff0000;\n        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\n            0 0 8px rgba(255, 0, 0, 0.6);\n    }\n`;\nconst AvartarContainer = styled.div`\n    width: 70px;\n    height: 60px;\n\n    border-radius: 50%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n`;\nconst Avartar = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n`;\nconst ReviewContent = styled.p`\n    font-size: 13px;\n    color: #666666;\n    line-height: 20px;\n    word-break: break-all;\n    word-wrap: break-word;\n    margin-bottom: 0px;\n`;\nconst ReviewDate = styled.span`\n    margin-left: 5px;\n    font-size: 12px;\n    color: #888;\n`;\nconst ReviewUser = styled.span`\n    font-size: 15px;\n    font-weight: bold;\n    line-height: 1;\n`;\nconst ReviewBox = styled.div`\n    width: 100%;\n    height: 110px;\n    border-bottom: 1px solid #e3e3e3;\n    padding: 25px 1rem;\n    display: flex;\n`;\nconst ReviewinfoBox = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-left: 1rem;\n    //border-bottom: 1px solid #e3e3e3;\n    //padding: 25px 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n`;\nconst Container = styled.div`\n    margin: auto;\n    max-width: 1250px;\n`;\nconst ReviewContainer = styled.div`\n    margin: auto;\n    max-width: 1250px;\n`;\nconst TitleContainer = styled.div`\n    width: 100%;\n    align-items: center;\n    border-top: 1px solid #e3e3e3;\n    border-bottom: 1px solid #e3e3e3;\n    background-color: #f9f9f9;\n    height: 44px;\n    //padding: 0.4rem 2rem;\n    line-height: 40px;\n`;\n\nconst TotalReview = styled.p`\n    font-size: 16px;\n    color: #333333;\n    margin-left: 2rem;\n`;\nconst TotalReviewCount = styled.span`\n    font-size: 16px;\n    color: #f68400;\n    margin-left: 5px;\n`;\nexport default DetailPage;\n","import React from 'react';\n\nfunction Mypage(props) {\n    return <div>mypage</div>;\n}\n\nexport default Mypage;\n","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nfunction PostBox({ post }) {\n    const [expanded, setExpanded] = React.useState(false);\n    const onClickShowmore = () => {\n        setExpanded(!expanded);\n    };\n    return (\n        <Container>\n            <Box>\n                <Image src={post.image} alt=\"test\" />\n                <RightContainer>\n                    <TextBox>\n                        <Title>{post.title}</Title>\n                        <ICON\n                            onClick={onClickShowmore}\n                            className={\n                                expanded ? 'fas fa-minus' : 'fas fa-plus'\n                            }\n                        />\n                    </TextBox>\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <TYpography paragraph>{post.content}</TYpography>\n                    </Collapse>\n                </RightContainer>\n            </Box>\n        </Container>\n    );\n}\nconst RightContainer = styled.div`\n    width: 100%;\n    margin: auto 0;\n    padding: 0 1rem;\n`;\nconst TYpography = styled(Typography)`\n    padding: 0 16px 0 0;\n    word-break: keep-all;\n    white-space: pre-line;\n`;\nconst ICON = styled.i`\n    background: transparent;\n    font-size: 1rem;\n    border: 3px solid #20c997;\n    border-radius: 50%;\n    color: #20c997; ;\n`;\nconst Title = styled.span`\n    color: #67696d;\n    line-height: 1.5;\n    font-size: 1rem;\n    font-weight: bold;\n`;\nconst Container = styled.div`\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-top: 1rem;\n    width: 370px;\n    box-shadow: rgb(175 181 186 / 30%) 0px 2px 6px 0px,\n        rgb(175 181 186 / 30%) 0px -1px 6px 0px;\n    box-sizing: inherit;\n`;\nconst TextBox = styled.div`\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: space-between;\n    height: 90px;\n`;\nconst Box = styled.div`\n    width: 100%;\n    min-height: 90px;\n    display: flex;\n`;\nconst Image = styled.img`\n    width: 84px;\n    height: 90px;\n`;\nexport default PostBox;\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SampleData } from '../../../SampleData/SampleData';\r\nimport PostBox from './postBox';\r\nimport axios from 'axios';\r\nimport { FailAlert } from '../../../Alert/Alert';\r\n\r\nfunction RecycleBox(props) {\r\n    useEffect(() => {\r\n        fetchQuiz();\r\n    }, []);\r\n    const [recycles, setRecycles] = useState({});\r\n    const fetchQuiz = () => {\r\n        axios\r\n            .get('/recycle_infos/')\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.statusText !== 'OK') {\r\n                    console.log(res);\r\n                    return;\r\n                }\r\n                let data = res.data.results;\r\n                let newRecycleInfos = Object.assign({}, recycles);\r\n\r\n                data.forEach((recycleInfo) => {\r\n                    let category = recycleInfo.category;\r\n                    if (!newRecycleInfos.hasOwnProperty(category)) {\r\n                        newRecycleInfos[category] = [];\r\n                    }\r\n                    newRecycleInfos[category].push(recycleInfo);\r\n                });\r\n                setRecycles(newRecycleInfos);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response?.data.msg) {\r\n                    FailAlert(err.response.data.msg);\r\n                } else {\r\n                    console.log('에러 : ', err.response);\r\n                }\r\n            });\r\n    };\r\n    console.log('infos', recycles);\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                {/*left*/}\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>일반쓰레기</Title>\r\n                    </TitleBox>\r\n                    {recycles['일반쓰레기']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n                {/*center*/}\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>분리수거</Title>\r\n                    </TitleBox>\r\n                    {recycles['분리수거']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n                {/*right*/}\r\n\r\n                <BoxContainer>\r\n                    <TitleBox>\r\n                        <Title>그 외 제품</Title>\r\n                    </TitleBox>\r\n                    {recycles['그 외 제품']?.map((post, index) => (\r\n                        <PostBox post={post} key={index} />\r\n                    ))}\r\n                </BoxContainer>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\nconst Title = styled.p`\r\n    color: #065920;\r\n    font-size: 1.5rem;\r\n    line-height: 1.75rem;\r\n    font-family: Roboto;\r\n    font-weight: 900;\r\n`;\r\nconst TitleBox = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    align-items: center;\r\n\r\n    box-shadow: rgb(0 0 0 / 10%) 0px 6px 6px 0px;\r\n`;\r\nconst Container = styled.div`\r\n    background: #f4f4f4;\r\n    width: 100%;\r\n`;\r\nconst Content = styled.div`\r\n    max-width: 1250px;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    //flex-direction: column;\r\n`;\r\nconst BoxContainer = styled.div``;\r\nexport default RecycleBox;\r\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nfunction AccordionContainer({ quiz }) {\n    return (\n        <div>\n            <Accordion style={{ borderBottom: '2px solid black' }}>\n                <AccordionSummary\n                    expandIcon={<i className=\"fas fa-angle-down\" />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <TYpography variant=\"h7\">{quiz.question}</TYpography>\n                </AccordionSummary>\n                <SolutionBox>\n                    <RealityFont>정답 : {quiz.answer}</RealityFont>\n                    <SolutionFont>{quiz.content}</SolutionFont>\n                </SolutionBox>\n            </Accordion>\n        </div>\n    );\n}\nconst SolutionBox = styled.div`\n    padding: 0 3rem 1rem;\n    margin-top: 0;\n`;\nconst TYpography = styled(Typography)`\n    padding: 1rem 0px;\n    font-size: 1rem;\n    font-weight: bolder;\n`;\nconst RealityFont = styled.p`\n    margin-bottom: 0;\n    font-size: 1.3rem;\n    line-height: 1.5;\n    color: #67696d;\n    font-weight: bolder;\n`;\nconst SolutionFont = styled.p`\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #67696d;\n    margin-top: 0.5rem;\n`;\nexport default AccordionContainer;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { QuizSample } from '../../../SampleData/SampleData';\nimport AccordionContainer from './AccordionContainer';\nimport axios from 'axios';\nimport { FailAlert, SuccessAlert } from '../../../Alert/Alert';\n\nfunction Quiz(props) {\n    const [quizs, setQuizs] = useState([]);\n    useEffect(() => {\n        FetchQuiz();\n    }, []);\n    const FetchQuiz = () => {\n        axios\n            .get('/quizzes/')\n            .then((res) => {\n                if (res.statusText !== 'OK') {\n                    console.log(res);\n                    return;\n                }\n                setQuizs(res.data.results);\n            })\n            .catch((err) => {\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err.response);\n                }\n            });\n    };\n    return (\n        <Container>\n            {console.log(quizs)}\n            <Content>\n                <h1>재활용 QUIZ</h1>\n                <p>\n                    여러분의 쓰레기가 오염되지 않도록 하고 재활용 과정을 거쳐\n                    다음 생까지 깨끗한 환경을 만들 수 있도록 <br /> 돕는 퀴즈를\n                    통해 재활용 IQ를 성장 시키세요. <br /> 올바른 재활용을 통해\n                    다른 사람과 환경을 보호 하려면 문제를 통해 배우십시오.\n                </p>\n                {quizs?.map((quiz, index) => (\n                    <AccordionContainer quiz={quiz} key={quiz.id} />\n                ))}\n            </Content>\n        </Container>\n    );\n}\nconst Container = styled.div`\n    width: 100%;\n    margin-bottom: 3rem;\n`;\nconst Content = styled.div`\n    max-width: 1250px;\n    margin: auto;\n`;\nexport default Quiz;\n","import React from 'react';\n\nimport RecycleBox from './RecycleBox/RecycleBox';\nimport Quiz from './Quiz/Quiz';\nfunction RecyclingPage(props) {\n    return (\n        <>\n            <RecycleBox />\n            <Quiz />\n        </>\n    );\n}\nexport default RecyclingPage;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FailAlert } from '../../Alert/Alert';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nfunction NoticeDetaiPage(props) {\n    const [post, setPost] = useState([]);\n    const postId = props.match.params.postId; ///URL 에서 가져옴\n    const history = useHistory();\n    useEffect(() => {\n        fetchPost();\n    }, []);\n    const fetchPost = () => {\n        axios\n            .get(`/notices/${postId}/`)\n            .then((res) => {\n                if (res.statusText !== 'OK') {\n                    FailAlert('존재하지 않는 게시글 입니다');\n                    return;\n                }\n                setPost(res.data);\n            })\n            .catch((err) => {\n                if (err.response.data.msg) {\n                    FailAlert(err.response.data.msg);\n                } else {\n                    console.log('에러 : ', err);\n                    FailAlert('존재하지 않는 게시글 입니다');\n                    history.push('/');\n                }\n            });\n    };\n    return (\n        <Container>\n            <NoticeFont>공지사항</NoticeFont>\n            <NoticeContainer>\n                <CreateDate>{moment(post.created_at).format('ll')}</CreateDate>\n\n                <Title>{post.title}</Title>\n                <Content>{post.content}</Content>\n            </NoticeContainer>\n        </Container>\n    );\n}\n\nexport default NoticeDetaiPage;\nconst Content = styled.p`\n    font-size: 1rem;\n    word-break: keep-all;\n    white-space: pre-wrap;\n    font-family: Arial;\n    letter-spacing: -0.045em;\n    line-height: 1.9; ;\n`;\nconst CreateDate = styled.p`\n    line-height: 27px;\n    letter-spacing: 0;\n    color: #777;\n    font-size: 18px;\n    margin-bottom: 0px;\n    font-family: 'NotoSansKR', sans-serif;\n    font-weight: 600;\n`;\nconst Title = styled.p`\n    padding-top: 6px;\n    font-size: 32px;\n    line-height: 47px;\n    letter-spacing: -0.05em;\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 700;\n    margin-bottom: 2rem;\n`;\nconst NoticeFont = styled.h3`\n    padding-top: 89px;\n    font-weight: 600;\n    font-size: 40px;\n    color: #000;\n    line-height: 54px;\n    letter-spacing: -3px;\n    margin: 0 auto 2rem;\n    font-family: 'Noto Sans KR', sans-serif;\n`;\nconst NoticeContainer = styled.div`\n    width: 100%;\n    padding: 40px 40px 60px;\n    border-top: 3px solid #222;\n    border-bottom: 1px solid #e8e8e8;\n    box-sizing: border-box;\n    color: #000;\n`;\nconst Container = styled.div`\n    max-width: 1100px;\n    padding: 1.5rem;\n    margin: auto;\n`;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    useHistory,\n    Redirect,\n} from 'react-router-dom';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport { createGlobalStyle } from 'styled-components';\nimport Navbar from './components/Navbar/NavBar';\nimport Home from './pages/MainPage/home';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport Help from './pages/Help/Help';\nimport UploadPage from './pages/UploadPage/UploadPage';\nimport NoticePage from './pages/NoticePage/NoticePage';\nimport RakingPage from './pages/RakingPage/RakingPage';\nimport CommunityPage from './pages/CommunityPage/CommunityPage';\nimport DetailPage from './pages/DetailPage/DetailPage';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './Redux/userSlice';\nimport Mypage from './pages/Mypage/Mypage';\nimport RecyclingPage from './pages/RecyclingPage/RecyclingPage';\nimport NoticeDetaiPage from './pages/NoticeDetailPage/NoticeDetaiPage';\nconst GlobalStyle = createGlobalStyle`\n  body {\n     font-family: Noto Sans KR;\n     font-weight: 400;\n    color: #000000;\n     //font-family: payboocLight,serif;\n     padding : 0 0;\n     margin: 0;\n\n     text-rendering: optimizelegibility;\n    -webkit-font-smoothing: antialiased;\n  }\n`;\n\nfunction App(props) {\n    // const user = useSelector(selectUser);\n    const auth = useSelector((state) => state.auth);\n    const { user } = auth;\n    return (\n        <Router>\n            <GlobalStyle />\n            <div>\n                <Help />\n                <Navbar />\n\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/login\" component={LoginPage} />\n                    <Route exact path=\"/register\" component={RegisterPage} />\n                    <Route exact path=\"/upload\" component={UploadPage} />\n                    <Route exact path=\"/Notice\" component={NoticePage} />\n                    <Route exact path=\"/Ranking\" component={RakingPage} />\n                    <Route exact path=\"/Community\" component={CommunityPage} />\n                    <Route exact path=\"/post/:postId\" component={DetailPage} />\n                    <Route exact path=\"/recycling\" component={RecyclingPage} />\n                    <Route\n                        exact\n                        path=\"/notice/:postId\"\n                        component={NoticeDetaiPage}\n                    />\n                    <Route\n                        exact\n                        path=\"/mypage/:userId\"\n                        render={\n                            () => (!user ? <Redirect to=\"/\" /> : <Mypage />)\n                            //    로그인 됬으면                           안됬으면\n                        }\n                    />\n                    {/*<Route component={NoMatch} />*/}\n                    <Route\n                        // path 를 따로 정의하지 않으면 모든 상황에 렌더링됨\n                        render={({ history }) => {\n                            history.push('/');\n                        }}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n    configureStore,\n    createAction,\n    createReducer,\n    createSlice,\n} from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './userSlice';\n\nconst persistConfig = {\n    key: 'root',\n    // localStorage에 저장합니다.\n    storage,\n    // auth, board, studio 3개의 reducer 중에 auth reducer만 localstorage에 저장합니다.\n    whitelist: ['auth'],\n    // blacklist -> 그것만 제외합니다\n};\n\nconst rootReducer = combineReducers({\n    auth: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    // reducer: slice.reducer,\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store, { persistor } from './Redux/store';\nimport axios from 'axios';\n\n// if (process.env.NODE_ENV === 'production') {\n//     axios.defaults.baseURL = 'http://www.dorestory.com:8000/v1/';\n//     axios.defaults.headers.post['Content-Type'] =\n//         'application/json;charset=utf-8';\n//     axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n// }\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}